/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesCreateWorkspaceConnRequest struct for TypesCreateWorkspaceConnRequest
type TypesCreateWorkspaceConnRequest struct {
	ConnectionHandle string `json:"connection_handle"`
}

// NewTypesCreateWorkspaceConnRequest instantiates a new TypesCreateWorkspaceConnRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesCreateWorkspaceConnRequest(connectionHandle string) *TypesCreateWorkspaceConnRequest {
	this := TypesCreateWorkspaceConnRequest{}
	this.ConnectionHandle = connectionHandle
	return &this
}

// NewTypesCreateWorkspaceConnRequestWithDefaults instantiates a new TypesCreateWorkspaceConnRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesCreateWorkspaceConnRequestWithDefaults() *TypesCreateWorkspaceConnRequest {
	this := TypesCreateWorkspaceConnRequest{}
	return &this
}

// GetConnectionHandle returns the ConnectionHandle field value
func (o *TypesCreateWorkspaceConnRequest) GetConnectionHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionHandle
}

// GetConnectionHandleOk returns a tuple with the ConnectionHandle field value
// and a boolean to check if the value has been set.
func (o *TypesCreateWorkspaceConnRequest) GetConnectionHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionHandle, true
}

// SetConnectionHandle sets field value
func (o *TypesCreateWorkspaceConnRequest) SetConnectionHandle(v string) {
	o.ConnectionHandle = v
}

func (o TypesCreateWorkspaceConnRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connection_handle"] = o.ConnectionHandle
	}
	return json.Marshal(toSerialize)
}

type NullableTypesCreateWorkspaceConnRequest struct {
	value *TypesCreateWorkspaceConnRequest
	isSet bool
}

func (v NullableTypesCreateWorkspaceConnRequest) Get() *TypesCreateWorkspaceConnRequest {
	return v.value
}

func (v *NullableTypesCreateWorkspaceConnRequest) Set(val *TypesCreateWorkspaceConnRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesCreateWorkspaceConnRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesCreateWorkspaceConnRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesCreateWorkspaceConnRequest(val *TypesCreateWorkspaceConnRequest) *NullableTypesCreateWorkspaceConnRequest {
	return &NullableTypesCreateWorkspaceConnRequest{value: val, isSet: true}
}

func (v NullableTypesCreateWorkspaceConnRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesCreateWorkspaceConnRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
