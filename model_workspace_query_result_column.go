/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// WorkspaceQueryResultColumn struct for WorkspaceQueryResultColumn
type WorkspaceQueryResultColumn struct {
	DataType      string `json:"data_type"`
	MaxDataLength *int32 `json:"max_data_length,omitempty"`
	Name          string `json:"name"`
}

// NewWorkspaceQueryResultColumn instantiates a new WorkspaceQueryResultColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceQueryResultColumn(dataType string, name string) *WorkspaceQueryResultColumn {
	this := WorkspaceQueryResultColumn{}
	this.DataType = dataType
	this.Name = name
	return &this
}

// NewWorkspaceQueryResultColumnWithDefaults instantiates a new WorkspaceQueryResultColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceQueryResultColumnWithDefaults() *WorkspaceQueryResultColumn {
	this := WorkspaceQueryResultColumn{}
	return &this
}

// GetDataType returns the DataType field value
func (o *WorkspaceQueryResultColumn) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResultColumn) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *WorkspaceQueryResultColumn) SetDataType(v string) {
	o.DataType = v
}

// GetMaxDataLength returns the MaxDataLength field value if set, zero value otherwise.
func (o *WorkspaceQueryResultColumn) GetMaxDataLength() int32 {
	if o == nil || o.MaxDataLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxDataLength
}

// GetMaxDataLengthOk returns a tuple with the MaxDataLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResultColumn) GetMaxDataLengthOk() (*int32, bool) {
	if o == nil || o.MaxDataLength == nil {
		return nil, false
	}
	return o.MaxDataLength, true
}

// HasMaxDataLength returns a boolean if a field has been set.
func (o *WorkspaceQueryResultColumn) HasMaxDataLength() bool {
	if o != nil && o.MaxDataLength != nil {
		return true
	}

	return false
}

// SetMaxDataLength gets a reference to the given int32 and assigns it to the MaxDataLength field.
func (o *WorkspaceQueryResultColumn) SetMaxDataLength(v int32) {
	o.MaxDataLength = &v
}

// GetName returns the Name field value
func (o *WorkspaceQueryResultColumn) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResultColumn) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkspaceQueryResultColumn) SetName(v string) {
	o.Name = v
}

func (o WorkspaceQueryResultColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data_type"] = o.DataType
	}
	if o.MaxDataLength != nil {
		toSerialize["max_data_length"] = o.MaxDataLength
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceQueryResultColumn struct {
	value *WorkspaceQueryResultColumn
	isSet bool
}

func (v NullableWorkspaceQueryResultColumn) Get() *WorkspaceQueryResultColumn {
	return v.value
}

func (v *NullableWorkspaceQueryResultColumn) Set(val *WorkspaceQueryResultColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceQueryResultColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceQueryResultColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceQueryResultColumn(val *WorkspaceQueryResultColumn) *NullableWorkspaceQueryResultColumn {
	return &NullableWorkspaceQueryResultColumn{value: val, isSet: true}
}

func (v NullableWorkspaceQueryResultColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceQueryResultColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
