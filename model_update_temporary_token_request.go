/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// UpdateTemporaryTokenRequest struct for UpdateTemporaryTokenRequest
type UpdateTemporaryTokenRequest struct {
	State string `json:"state"`
}

// NewUpdateTemporaryTokenRequest instantiates a new UpdateTemporaryTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTemporaryTokenRequest(state string) *UpdateTemporaryTokenRequest {
	this := UpdateTemporaryTokenRequest{}
	this.State = state
	return &this
}

// NewUpdateTemporaryTokenRequestWithDefaults instantiates a new UpdateTemporaryTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTemporaryTokenRequestWithDefaults() *UpdateTemporaryTokenRequest {
	this := UpdateTemporaryTokenRequest{}
	return &this
}

// GetState returns the State field value
func (o *UpdateTemporaryTokenRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *UpdateTemporaryTokenRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *UpdateTemporaryTokenRequest) SetState(v string) {
	o.State = v
}

func (o UpdateTemporaryTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTemporaryTokenRequest struct {
	value *UpdateTemporaryTokenRequest
	isSet bool
}

func (v NullableUpdateTemporaryTokenRequest) Get() *UpdateTemporaryTokenRequest {
	return v.value
}

func (v *NullableUpdateTemporaryTokenRequest) Set(val *UpdateTemporaryTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTemporaryTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTemporaryTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTemporaryTokenRequest(val *UpdateTemporaryTokenRequest) *NullableUpdateTemporaryTokenRequest {
	return &NullableUpdateTemporaryTokenRequest{value: val, isSet: true}
}

func (v NullableUpdateTemporaryTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTemporaryTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
