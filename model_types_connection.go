/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesConnection struct for TypesConnection
type TypesConnection struct {
	Config     *map[string]interface{} `json:"config,omitempty"`
	CreatedAt  string                  `json:"created_at"`
	Handle     string                  `json:"handle"`
	Id         string                  `json:"id"`
	Identity   *TypesIdentity          `json:"identity,omitempty"`
	IdentityId string                  `json:"identity_id"`
	Plugin     *string                 `json:"plugin,omitempty"`
	Type       *string                 `json:"type,omitempty"`
	UpdatedAt  *string                 `json:"updated_at,omitempty"`
	VersionId  int32                   `json:"version_id"`
}

// NewTypesConnection instantiates a new TypesConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesConnection(createdAt string, handle string, id string, identityId string, versionId int32) *TypesConnection {
	this := TypesConnection{}
	this.CreatedAt = createdAt
	this.Handle = handle
	this.Id = id
	this.IdentityId = identityId
	this.VersionId = versionId
	return &this
}

// NewTypesConnectionWithDefaults instantiates a new TypesConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesConnectionWithDefaults() *TypesConnection {
	this := TypesConnection{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *TypesConnection) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *TypesConnection) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *TypesConnection) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TypesConnection) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TypesConnection) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetHandle returns the Handle field value
func (o *TypesConnection) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *TypesConnection) SetHandle(v string) {
	o.Handle = v
}

// GetId returns the Id field value
func (o *TypesConnection) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TypesConnection) SetId(v string) {
	o.Id = v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *TypesConnection) GetIdentity() TypesIdentity {
	if o == nil || o.Identity == nil {
		var ret TypesIdentity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetIdentityOk() (*TypesIdentity, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *TypesConnection) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given TypesIdentity and assigns it to the Identity field.
func (o *TypesConnection) SetIdentity(v TypesIdentity) {
	o.Identity = &v
}

// GetIdentityId returns the IdentityId field value
func (o *TypesConnection) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *TypesConnection) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *TypesConnection) GetPlugin() string {
	if o == nil || o.Plugin == nil {
		var ret string
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetPluginOk() (*string, bool) {
	if o == nil || o.Plugin == nil {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *TypesConnection) HasPlugin() bool {
	if o != nil && o.Plugin != nil {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given string and assigns it to the Plugin field.
func (o *TypesConnection) SetPlugin(v string) {
	o.Plugin = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TypesConnection) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TypesConnection) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TypesConnection) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TypesConnection) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TypesConnection) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TypesConnection) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVersionId returns the VersionId field value
func (o *TypesConnection) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *TypesConnection) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *TypesConnection) SetVersionId(v int32) {
	o.VersionId = v
}

func (o TypesConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if true {
		toSerialize["identity_id"] = o.IdentityId
	}
	if o.Plugin != nil {
		toSerialize["plugin"] = o.Plugin
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableTypesConnection struct {
	value *TypesConnection
	isSet bool
}

func (v NullableTypesConnection) Get() *TypesConnection {
	return v.value
}

func (v *NullableTypesConnection) Set(val *TypesConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesConnection(val *TypesConnection) *NullableTypesConnection {
	return &NullableTypesConnection{value: val, isSet: true}
}

func (v NullableTypesConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
