/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// NotificationRuleRecipient struct for NotificationRuleRecipient
type NotificationRuleRecipient struct {
	Detail             *string `json:"detail,omitempty"`
	Id                 string  `json:"id"`
	NotificationRuleId string  `json:"notification_rule_id"`
	Recipient          string  `json:"recipient"`
	State              string  `json:"state"`
}

// NewNotificationRuleRecipient instantiates a new NotificationRuleRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRuleRecipient(id string, notificationRuleId string, recipient string, state string) *NotificationRuleRecipient {
	this := NotificationRuleRecipient{}
	this.Id = id
	this.NotificationRuleId = notificationRuleId
	this.Recipient = recipient
	this.State = state
	return &this
}

// NewNotificationRuleRecipientWithDefaults instantiates a new NotificationRuleRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRuleRecipientWithDefaults() *NotificationRuleRecipient {
	this := NotificationRuleRecipient{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *NotificationRuleRecipient) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRuleRecipient) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *NotificationRuleRecipient) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *NotificationRuleRecipient) SetDetail(v string) {
	o.Detail = &v
}

// GetId returns the Id field value
func (o *NotificationRuleRecipient) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleRecipient) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NotificationRuleRecipient) SetId(v string) {
	o.Id = v
}

// GetNotificationRuleId returns the NotificationRuleId field value
func (o *NotificationRuleRecipient) GetNotificationRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationRuleId
}

// GetNotificationRuleIdOk returns a tuple with the NotificationRuleId field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleRecipient) GetNotificationRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationRuleId, true
}

// SetNotificationRuleId sets field value
func (o *NotificationRuleRecipient) SetNotificationRuleId(v string) {
	o.NotificationRuleId = v
}

// GetRecipient returns the Recipient field value
func (o *NotificationRuleRecipient) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleRecipient) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *NotificationRuleRecipient) SetRecipient(v string) {
	o.Recipient = v
}

// GetState returns the State field value
func (o *NotificationRuleRecipient) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleRecipient) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *NotificationRuleRecipient) SetState(v string) {
	o.State = v
}

func (o NotificationRuleRecipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["notification_rule_id"] = o.NotificationRuleId
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationRuleRecipient struct {
	value *NotificationRuleRecipient
	isSet bool
}

func (v NullableNotificationRuleRecipient) Get() *NotificationRuleRecipient {
	return v.value
}

func (v *NullableNotificationRuleRecipient) Set(val *NotificationRuleRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRuleRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRuleRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRuleRecipient(val *NotificationRuleRecipient) *NullableNotificationRuleRecipient {
	return &NullableNotificationRuleRecipient{value: val, isSet: true}
}

func (v NullableNotificationRuleRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRuleRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
