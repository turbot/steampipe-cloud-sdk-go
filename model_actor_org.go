/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// ActorOrg struct for ActorOrg
type ActorOrg struct {
	Org Org `json:"org"`
	// The role of the actor in the org.
	Role string `json:"role"`
	// Any workspaces the actor has explicit permission to within the org. Any org owner will have implicit owner roles over all workspaces, so they will not be listed here.
	Workspaces *[]ActorOrgWorkspace `json:"workspaces,omitempty"`
}

// NewActorOrg instantiates a new ActorOrg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActorOrg(org Org, role string) *ActorOrg {
	this := ActorOrg{}
	this.Org = org
	this.Role = role
	return &this
}

// NewActorOrgWithDefaults instantiates a new ActorOrg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActorOrgWithDefaults() *ActorOrg {
	this := ActorOrg{}
	return &this
}

// GetOrg returns the Org field value
func (o *ActorOrg) GetOrg() Org {
	if o == nil {
		var ret Org
		return ret
	}

	return o.Org
}

// GetOrgOk returns a tuple with the Org field value
// and a boolean to check if the value has been set.
func (o *ActorOrg) GetOrgOk() (*Org, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Org, true
}

// SetOrg sets field value
func (o *ActorOrg) SetOrg(v Org) {
	o.Org = v
}

// GetRole returns the Role field value
func (o *ActorOrg) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ActorOrg) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ActorOrg) SetRole(v string) {
	o.Role = v
}

// GetWorkspaces returns the Workspaces field value if set, zero value otherwise.
func (o *ActorOrg) GetWorkspaces() []ActorOrgWorkspace {
	if o == nil || o.Workspaces == nil {
		var ret []ActorOrgWorkspace
		return ret
	}
	return *o.Workspaces
}

// GetWorkspacesOk returns a tuple with the Workspaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActorOrg) GetWorkspacesOk() (*[]ActorOrgWorkspace, bool) {
	if o == nil || o.Workspaces == nil {
		return nil, false
	}
	return o.Workspaces, true
}

// HasWorkspaces returns a boolean if a field has been set.
func (o *ActorOrg) HasWorkspaces() bool {
	if o != nil && o.Workspaces != nil {
		return true
	}

	return false
}

// SetWorkspaces gets a reference to the given []ActorOrgWorkspace and assigns it to the Workspaces field.
func (o *ActorOrg) SetWorkspaces(v []ActorOrgWorkspace) {
	o.Workspaces = &v
}

func (o ActorOrg) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["org"] = o.Org
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if o.Workspaces != nil {
		toSerialize["workspaces"] = o.Workspaces
	}
	return json.Marshal(toSerialize)
}

type NullableActorOrg struct {
	value *ActorOrg
	isSet bool
}

func (v NullableActorOrg) Get() *ActorOrg {
	return v.value
}

func (v *NullableActorOrg) Set(val *ActorOrg) {
	v.value = val
	v.isSet = true
}

func (v NullableActorOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableActorOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActorOrg(val *ActorOrg) *NullableActorOrg {
	return &NullableActorOrg{value: val, isSet: true}
}

func (v NullableActorOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActorOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
