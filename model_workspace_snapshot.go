/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// WorkspaceSnapshot struct for WorkspaceSnapshot
type WorkspaceSnapshot struct {
	// The time of creation in ISO 8601 UTC.
	CreatedAt string `json:"created_at"`
	CreatedBy *User  `json:"created_by,omitempty"`
	// The ID of the user that created this.
	CreatedById string `json:"created_by_id"`
	// The mod-prefixed name of the dashboard this snapshot belongs to.
	DashboardName string `json:"dashboard_name"`
	// The title of the dashboard this snapshot belongs to.
	DashboardTitle string `json:"dashboard_title"`
	// The time when the snapshot will expire.
	ExpiresAt *string `json:"expires_at,omitempty"`
	// The unique identifier for the snapshot.
	Id string `json:"id"`
	// The unique identifier for the identity that the snapshot belongs to.
	IdentityId string      `json:"identity_id"`
	Inputs     interface{} `json:"inputs,omitempty"`
	// The schema version of the underlying snapshot.
	SchemaVersion string `json:"schema_version"`
	// The current state of the snapshot.
	State *string     `json:"state,omitempty"`
	Tags  interface{} `json:"tags,omitempty"`
	// The title of the snapshot.
	Title *string `json:"title,omitempty"`
	// The time of the last update in ISO 8601 UTC.
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *User   `json:"updated_by,omitempty"`
	// The ID of the user that performed the last update.
	UpdatedById string `json:"updated_by_id"`
	// The version ID of this item. Pass this version ID via an If-Match header when performing mutation operations on the item.
	VersionId int32 `json:"version_id"`
	// The visibility of the snapshot.
	Visibility *string `json:"visibility,omitempty"`
	// The unique identifier for the workspace that the snapshot belongs to.
	WorkspaceId string `json:"workspace_id"`
}

// NewWorkspaceSnapshot instantiates a new WorkspaceSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceSnapshot(createdAt string, createdById string, dashboardName string, dashboardTitle string, id string, identityId string, schemaVersion string, updatedById string, versionId int32, workspaceId string) *WorkspaceSnapshot {
	this := WorkspaceSnapshot{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.DashboardName = dashboardName
	this.DashboardTitle = dashboardTitle
	this.Id = id
	this.IdentityId = identityId
	this.SchemaVersion = schemaVersion
	this.UpdatedById = updatedById
	this.VersionId = versionId
	this.WorkspaceId = workspaceId
	return &this
}

// NewWorkspaceSnapshotWithDefaults instantiates a new WorkspaceSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceSnapshotWithDefaults() *WorkspaceSnapshot {
	this := WorkspaceSnapshot{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkspaceSnapshot) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkspaceSnapshot) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *WorkspaceSnapshot) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *WorkspaceSnapshot) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *WorkspaceSnapshot) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDashboardName returns the DashboardName field value
func (o *WorkspaceSnapshot) GetDashboardName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DashboardName
}

// GetDashboardNameOk returns a tuple with the DashboardName field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetDashboardNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DashboardName, true
}

// SetDashboardName sets field value
func (o *WorkspaceSnapshot) SetDashboardName(v string) {
	o.DashboardName = v
}

// GetDashboardTitle returns the DashboardTitle field value
func (o *WorkspaceSnapshot) GetDashboardTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DashboardTitle
}

// GetDashboardTitleOk returns a tuple with the DashboardTitle field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetDashboardTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DashboardTitle, true
}

// SetDashboardTitle sets field value
func (o *WorkspaceSnapshot) SetDashboardTitle(v string) {
	o.DashboardTitle = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetExpiresAt() string {
	if o == nil || o.ExpiresAt == nil {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetExpiresAtOk() (*string, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *WorkspaceSnapshot) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetId returns the Id field value
func (o *WorkspaceSnapshot) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceSnapshot) SetId(v string) {
	o.Id = v
}

// GetIdentityId returns the IdentityId field value
func (o *WorkspaceSnapshot) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *WorkspaceSnapshot) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetInputs returns the Inputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkspaceSnapshot) GetInputs() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkspaceSnapshot) GetInputsOk() (*interface{}, bool) {
	if o == nil || o.Inputs == nil {
		return nil, false
	}
	return &o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasInputs() bool {
	if o != nil && o.Inputs != nil {
		return true
	}

	return false
}

// SetInputs gets a reference to the given interface{} and assigns it to the Inputs field.
func (o *WorkspaceSnapshot) SetInputs(v interface{}) {
	o.Inputs = v
}

// GetSchemaVersion returns the SchemaVersion field value
func (o *WorkspaceSnapshot) GetSchemaVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetSchemaVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaVersion, true
}

// SetSchemaVersion sets field value
func (o *WorkspaceSnapshot) SetSchemaVersion(v string) {
	o.SchemaVersion = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *WorkspaceSnapshot) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkspaceSnapshot) GetTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkspaceSnapshot) GetTagsOk() (*interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given interface{} and assigns it to the Tags field.
func (o *WorkspaceSnapshot) SetTags(v interface{}) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkspaceSnapshot) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WorkspaceSnapshot) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *WorkspaceSnapshot) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *WorkspaceSnapshot) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *WorkspaceSnapshot) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetVersionId returns the VersionId field value
func (o *WorkspaceSnapshot) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *WorkspaceSnapshot) SetVersionId(v int32) {
	o.VersionId = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *WorkspaceSnapshot) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *WorkspaceSnapshot) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *WorkspaceSnapshot) SetVisibility(v string) {
	o.Visibility = &v
}

// GetWorkspaceId returns the WorkspaceId field value
func (o *WorkspaceSnapshot) GetWorkspaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceSnapshot) GetWorkspaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceId, true
}

// SetWorkspaceId sets field value
func (o *WorkspaceSnapshot) SetWorkspaceId(v string) {
	o.WorkspaceId = v
}

func (o WorkspaceSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if true {
		toSerialize["dashboard_name"] = o.DashboardName
	}
	if true {
		toSerialize["dashboard_title"] = o.DashboardTitle
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["identity_id"] = o.IdentityId
	}
	if o.Inputs != nil {
		toSerialize["inputs"] = o.Inputs
	}
	if true {
		toSerialize["schema_version"] = o.SchemaVersion
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if true {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceSnapshot struct {
	value *WorkspaceSnapshot
	isSet bool
}

func (v NullableWorkspaceSnapshot) Get() *WorkspaceSnapshot {
	return v.value
}

func (v *NullableWorkspaceSnapshot) Set(val *WorkspaceSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceSnapshot(val *WorkspaceSnapshot) *NullableWorkspaceSnapshot {
	return &NullableWorkspaceSnapshot{value: val, isSet: true}
}

func (v NullableWorkspaceSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
