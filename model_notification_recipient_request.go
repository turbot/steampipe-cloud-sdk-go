/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// NotificationRecipientRequest struct for NotificationRecipientRequest
type NotificationRecipientRequest struct {
	Recipients *[]string `json:"recipients,omitempty"`
	Type       *string   `json:"type,omitempty"`
}

// NewNotificationRecipientRequest instantiates a new NotificationRecipientRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRecipientRequest() *NotificationRecipientRequest {
	this := NotificationRecipientRequest{}
	return &this
}

// NewNotificationRecipientRequestWithDefaults instantiates a new NotificationRecipientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRecipientRequestWithDefaults() *NotificationRecipientRequest {
	this := NotificationRecipientRequest{}
	return &this
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *NotificationRecipientRequest) GetRecipients() []string {
	if o == nil || o.Recipients == nil {
		var ret []string
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRecipientRequest) GetRecipientsOk() (*[]string, bool) {
	if o == nil || o.Recipients == nil {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *NotificationRecipientRequest) HasRecipients() bool {
	if o != nil && o.Recipients != nil {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *NotificationRecipientRequest) SetRecipients(v []string) {
	o.Recipients = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NotificationRecipientRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRecipientRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NotificationRecipientRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NotificationRecipientRequest) SetType(v string) {
	o.Type = &v
}

func (o NotificationRecipientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Recipients != nil {
		toSerialize["recipients"] = o.Recipients
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationRecipientRequest struct {
	value *NotificationRecipientRequest
	isSet bool
}

func (v NullableNotificationRecipientRequest) Get() *NotificationRecipientRequest {
	return v.value
}

func (v *NullableNotificationRecipientRequest) Set(val *NotificationRecipientRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRecipientRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRecipientRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRecipientRequest(val *NotificationRecipientRequest) *NullableNotificationRecipientRequest {
	return &NullableNotificationRecipientRequest{value: val, isSet: true}
}

func (v NullableNotificationRecipientRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRecipientRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
