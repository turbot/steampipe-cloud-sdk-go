openapi: 3.0.1
info:
  contact:
    email: help@steampipe.io
    name: Support
  description: Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io),
    an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP
    and more) with SQL. No DB required.
  title: Steampipe Cloud
  version: '{{OPEN_API_VERSION}}'
servers:
- url: https://cloud.steampipe.io/api/v0
paths:
  /actor:
    get:
      description: Returns the actor information.
      operationId: actor_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Actor information
      tags:
      - Actors
  /actor/activity:
    get:
      description: List the activity for an actor.
      operationId: actor_listActivity
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List actor activity
      tags:
      - Actors
  /actor/conn:
    get:
      description: List the connections for an actor.
      operationId: actor_listConnections
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List actor connections
      tags:
      - Actors
  /actor/org:
    get:
      description: List the orgs and org workspaces for an actor, along with role
        within each.
      operationId: actor_listOrgs
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List actor orgs
      tags:
      - Actors
  /actor/org/invite:
    get:
      description: List the orgs to which the actor has been invited.
      operationId: actor_listOrgInvites
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org invites for actor
      tags:
      - Actors
  /actor/workspace:
    get:
      description: List the workspaces for an actor.
      operationId: actor_listWorkspaces
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActorWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List actor workspaces
      tags:
      - Actors
  /auth/{provider}:
    get:
      description: With an authentication provider, users can access Steampipe Cloud
        with single sign-on (SSO) using credentials from a third party. Steampipe
        Cloud currently supports GitHub as an authentication provider.
      operationId: auth_provider
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Auth Provider
      tags:
      - Auth
  /auth/{provider}/callback:
    get:
      description: Auth provider callback.
      operationId: auth_providerCallback
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Auth provider callback
      tags:
      - Auth
  /identity:
    get:
      description: List identities with their public information.
      operationId: identity_list
      parameters:
      - description: Optional free-text search to filter the identities.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentitiesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List identities
      tags:
      - Identities
  /identity/{identity_handle}:
    get:
      description: Get public information for an identity.
      operationId: identity_get
      parameters:
      - description: Specify the handle of the identity whose information you want
          to retrieve.
        explode: false
        in: path
        name: identity_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get identity
      tags:
      - Identities
  /login:
    post:
      description: User login.
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        description: The request body to login.
        required: true
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User login
      tags:
      - Auth
      x-codegen-request-body-name: request
  /login/confirm:
    get:
      description: Confirm user login.
      operationId: auth_confirmLogin
      parameters:
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Confirm user login
      tags:
      - Auth
  /login/token:
    post:
      description: Generate a temporary token request for CLI login.
      operationId: auth_loginToken_create
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryTokenRequest'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Generate temporary token request
      tags:
      - Auth
  /login/token/{temporary_token_request_id}:
    delete:
      description: Delete a temporary token request status.
      operationId: auth_loginToken_delete
      parameters:
      - description: The ID of the temporary token request to delete.
        explode: false
        in: path
        name: temporary_token_request_id
        required: true
        schema:
          format: ^spttr_[0-9a-v]{20}_[0-9a-z]{19,}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryTokenRequest'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete temporary token request
      tags:
      - Auth
    get:
      description: Get a temporary token request status with token.
      operationId: auth_loginToken_get
      parameters:
      - description: The ID of the temporary token request to get.
        explode: false
        in: path
        name: temporary_token_request_id
        required: true
        schema:
          format: ^spttr_[0-9a-v]{20}_[0-9a-z]{19,}$
          type: string
        style: simple
      - description: The challenge code to request the temporary token. Will only
          be obtained after confirming the login request in the Steampipe Cloud UI.
        explode: true
        in: query
        name: code
        required: false
        schema:
          format: ^[0-9]{4}$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryTokenRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get temporary token request
      tags:
      - Auth
    patch:
      description: Update a temporary token request status.
      operationId: auth_loginToken_update
      parameters:
      - description: The ID of the temporary token request to update.
        explode: false
        in: path
        name: temporary_token_request_id
        required: true
        schema:
          format: ^spttr_[0-9a-v]{20}_[0-9a-z]{19,}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemporaryTokenRequest'
        description: The request body containing updates for the temporary token request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryTokenRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update temporary token request
      tags:
      - Auth
      x-codegen-request-body-name: request
  /logout/{provider}:
    get:
      description: Removes the session that is associated with the user.
      operationId: auth_logout
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User logout
      tags:
      - Auth
  /org:
    get:
      description: List all the organizations.
      operationId: org_list
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List orgs
      tags:
      - Orgs
    post:
      description: Creates an organization.
      operationId: org_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrgRequest'
        description: The request body to create the organization.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org
      tags:
      - Orgs
      x-codegen-request-body-name: request
  /org/{org_handle}:
    delete:
      description: Deletes the specified organization if you have the appropriate
        access.
      operationId: org_delete
      parameters:
      - description: Specify the handle of the organization which need to be deleted.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org
      tags:
      - Orgs
    get:
      description: Retrieves the organization information.
      operationId: org_get
      parameters:
      - description: Specify the handle of an organization whose information you want
          to retrieve.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org
      tags:
      - Orgs
    patch:
      description: Updates the handle name, display name, or the URL of an organization.
      operationId: org_update
      parameters:
      - description: Specify the handle of the organization which need to be updated.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrgRequest'
        description: The request body for the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org
      tags:
      - Orgs
      x-codegen-request-body-name: request
  /org/{org_handle}/audit_log:
    get:
      description: Returns the audit logs for an org.
      operationId: org_listAuditLogs
      parameters:
      - description: Specify the org handle to get the audit logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Org audit logs
      tags:
      - Orgs
  /org/{org_handle}/conn:
    get:
      description: List the connection for an organization.
      operationId: orgConnection_list
      parameters:
      - description: The handle of the organization for which we want to list the
          connections.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org connections
      tags:
      - OrgConnections
    post:
      description: Creates a new connection for an organization. The limit is 10 per
        organization. If you require more than 10, you must contact support to request
        an increase.
      operationId: orgConnection_create
      parameters:
      - description: The handle of the organization where we want to create the connection.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        description: The request body for the connection to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org connection
      tags:
      - OrgConnections
      x-codegen-request-body-name: request
  /org/{org_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the connection specified in the request.
      operationId: orgConnection_delete
      parameters:
      - description: The handle of the organization where the connection exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the connection which needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org connection
      tags:
      - OrgConnections
    get:
      description: Get the details for a connection.
      operationId: orgConnection_get
      parameters:
      - description: The handle of an organization where the connection exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection whose detail needs to be fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org connection
      tags:
      - OrgConnections
    patch:
      description: Update the connection in an organization.
      operationId: orgConnection_update
      parameters:
      - description: The handle of the organization where the connection exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection which needs to be updated.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionRequest'
        description: The request body of the connection which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org connection
      tags:
      - OrgConnections
      x-codegen-request-body-name: request
  /org/{org_handle}/conn/{conn_handle}/test:
    post:
      description: Test the config for an org connection to check for basic connectivity
        before you create it.
      operationId: orgConnection_test
      parameters:
      - description: The handle of the org performing the action.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection to be tested. For connections that
          are not yet created, use underscore `_` as the handle, else pass the handle
          of the existing connection.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTestResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Test org connection
      tags:
      - OrgConnections
  /org/{org_handle}/feature:
    get:
      description: Returns the feature information for an org.
      operationId: org_listFeatures
      parameters:
      - description: Specify the org handle to get the feature details.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Org features
      tags:
      - Orgs
  /org/{org_handle}/member:
    get:
      description: List all members of an organization who are invited / accepted.
      operationId: orgMember_list
      parameters:
      - description: Specify the organization handle.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Optional free-text search to filter the org members.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List Organization Members
      tags:
      - OrgMembers
  /org/{org_handle}/member/invite:
    delete:
      description: Delete the org member invite.
      operationId: orgMember_deleteInvite
      parameters:
      - description: Specify the organization handle.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the token to be rejected.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org member invite
      tags:
      - OrgMembers
    post:
      description: Invite member to an org.
      operationId: orgMember_invite
      parameters:
      - description: Specify the handle of an organization where the member need to
          be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteOrgUserRequest'
        description: The request body to invite a member to an organization.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUser'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Invite org member
      tags:
      - OrgMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/member/invite/confirm:
    get:
      description: Confirm org member invite.
      operationId: orgMember_confirmInvite
      parameters:
      - description: Specify the handle of an organization where the member need to
          be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Confirm org member invite
      tags:
      - OrgMembers
  /org/{org_handle}/member/{user_handle}:
    delete:
      description: Delete the user from the org.
      operationId: orgMember_delete
      parameters:
      - description: Specify the handle of the organization where the member exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user which need to be removed.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org member
      tags:
      - OrgMembers
    get:
      description: Get org member.
      operationId: orgMember_get
      parameters:
      - description: Specify the organization handle where the member is associated.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose information you want to
          retrieve.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org member
      tags:
      - OrgMembers
    patch:
      description: Update the role of the member.
      operationId: orgMember_update
      parameters:
      - description: Specify the handle of the organization where the member exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose role need to be updated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrgUserRequest'
        description: The request body for the member.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org member
      tags:
      - OrgMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/pipeline:
    get:
      description: List the pipelines for an organization.
      operationId: orgPipeline_list
      parameters:
      - description: The handle of the organization for which we want to list pipelines.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org pipelines
      tags:
      - OrgPipelines
    post:
      description: Creates a new pipeline for an organization.
      operationId: orgPipeline_create
      parameters:
      - description: The handle of the organization where we want to create the pipeline.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        description: The request body for the pipeline to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org pipeline
      tags:
      - OrgPipelines
      x-codegen-request-body-name: request
  /org/{org_handle}/pipeline/{pipeline_id}:
    delete:
      description: Deletes the pipeline specified in the request of an organization.
      operationId: orgPipeline_delete
      parameters:
      - description: The handle of the organization where the pipeline exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: Provide the id of the pipeline which needs to be deleted.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org pipeline
      tags:
      - OrgPipelines
    get:
      description: Get the details of a pipeline for an organization.
      operationId: orgPipeline_get
      parameters:
      - description: The handle of the organization where the pipeline exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline whose detail needs to be fetched.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org pipeline
      tags:
      - OrgPipelines
    patch:
      description: Updates a pipeline for an organization.
      operationId: orgPipeline_update
      parameters:
      - description: The handle of the organization where the pipeline exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline which needs to be updated.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        description: The request body for the pipeline which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org pipeline
      tags:
      - OrgPipelines
      x-codegen-request-body-name: request
  /org/{org_handle}/quota:
    get:
      description: Returns the quota information for an org.
      operationId: org_getQuota
      parameters:
      - description: Specify the org handle to get the quota details.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgQuota'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Org quota
      tags:
      - Orgs
  /org/{org_handle}/workspace:
    get:
      description: List the workspace for an organization.
      operationId: orgWorkspace_list
      parameters:
      - description: The handle of the organization for which we want to list the
          workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org workspaces
      tags:
      - OrgWorkspaces
    post:
      description: Creates a new workspace for an organization. The limit is 10 per
        organization. If you require more than 10, you must contact support to request
        an increase.
      operationId: orgWorkspace_create
      parameters:
      - description: The handle of the organization where we want to create the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        description: The request body for the workspace to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}:
    delete:
      description: Deletes the workspace specified in the request.
      operationId: orgWorkspace_delete
      parameters:
      - description: The handle of the organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the workspace which needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace
      tags:
      - OrgWorkspaces
    get:
      description: Get the details for a workspace in an organization.
      operationId: orgWorkspace_get
      parameters:
      - description: The handle for an organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose detail needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org workspace
      tags:
      - OrgWorkspaces
    patch:
      description: Update a workspace in an organization.
      operationId: orgWorkspace_update
      parameters:
      - description: The handle of the organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace which needs to be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
        description: The request body of the workspace which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/audit_log:
    get:
      description: Returns the audit logs for an org workspace.
      operationId: orgWorkspace_listAuditLogs
      parameters:
      - description: Specify the org handle to get the audit logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Org workspace audit logs
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/command:
    post:
      description: 'Run a command in the workspace. Valid commands are: reboot.'
      operationId: orgWorkspace_command
      parameters:
      - description: The handle of the org where we want to run the workspace command.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where command will be executed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCommandRequest'
        description: The request body for the workspace command.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommandResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Run org workspace command
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/conn:
    get:
      description: List the connections associated with a workspace.
      operationId: orgWorkspaceConnectionAssociation_list
      parameters:
      - description: The handle of an organization for which you want to list the
          associations.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where you want to list the associations.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceConnResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org workspace connection associations
      tags:
      - OrgWorkspaceConnectionAssociations
    post:
      description: Associate a connection with the workspace. A workspace can have
        multiple association.
      operationId: orgWorkspaceConnectionAssociation_create
      parameters:
      - description: The handle of the organization where we want to create an association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection will be associated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceConnRequest'
        description: The request body for the association to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/conn/{conn_handle}:
    delete:
      description: Dissociates or delete the workspace and connection association.
      operationId: orgWorkspaceConnectionAssociation_delete
      parameters:
      - description: The handle of an organization where we want to delete the association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose association needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
    get:
      description: Get the details for a workspace and connection association on an
        organization.
      operationId: orgWorkspaceConnectionAssociation_get
      parameters:
      - description: The handle of the org for which you want to get the association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection exist.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association details needs to be
          fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
  /org/{org_handle}/workspace/{workspace_handle}/db_log:
    get:
      description: Returns the workspace logs for an org.
      operationId: orgWorkspace_listDBLogs
      parameters:
      - description: Specify the org handle to get the workspace logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Org workspace logs
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/member:
    get:
      description: List all members of a workspace in an organization who has accepted
        / invited.
      operationId: orgWorkspaceMember_list
      parameters:
      - description: Specify the handle of the organization where the member need
          to be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the workspace where the member need to
          be invited.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Optional free-text search to filter the org workspace members.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgWorkspaceUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List Organization Workspace Members
      tags:
      - OrgWorkspaceMembers
    post:
      description: Add an individual as a member of a workspace in an organization.
      operationId: orgWorkspaceMember_create
      parameters:
      - description: Specify the handle of the organization where the member need
          to be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the workspace where the member need to
          be invited.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrgWorkspaceUserRequest'
        description: The request body to invite a member to an organization.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkspaceUser'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create Org Workspace Member
      tags:
      - OrgWorkspaceMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/member/{user_handle}:
    delete:
      description: Remove a member from a workspace of an organization.
      operationId: orgWorkspaceMember_delete
      parameters:
      - description: Specify the handle of the organization where the member need
          to be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the workspace where the member need to
          be invited.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose information you want to
          retrive.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkspaceUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete Org Workspace Member
      tags:
      - OrgWorkspaceMembers
    get:
      description: Get details of a member belonging to a workspace of an organization.
      operationId: orgWorkspaceMember_get
      parameters:
      - description: Specify the handle of the organization where the member need
          to be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the workspace where the member need to
          be invited.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose information you want to
          retrive.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkspaceUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get Org Workspace Member
      tags:
      - OrgWorkspaceMembers
    patch:
      description: Update the role of a member belonging to a workspace of an organization.
      operationId: orgWorkspaceMember_update
      parameters:
      - description: Specify the handle of the organization where the member need
          to be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the workspace where the member need to
          be invited.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose information you want to
          retrive.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrgWorkspaceUserRequest'
        description: The request body for the member.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgWorkspaceUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update Org Workspace Member
      tags:
      - OrgWorkspaceMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/mod:
    get:
      description: List organization workspace installed mods
      operationId: orgWorkspaceMod_list
      parameters:
      - description: The handle of an organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where mods were installed
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceModsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List organization workspace installed mods
      tags:
      - OrgWorkspaceMods
    post:
      description: Install a mod to an organization workspace
      operationId: orgWorkspaceMod_install
      parameters:
      - description: The handle of an organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod will be installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceModRequest'
        description: The request body to install a mod in the mentioned workspace
          for this organization.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Install a mod to an organization workspace
      tags:
      - OrgWorkspaceMods
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/mod/{mod_alias}:
    delete:
      description: Uninstall mod from organization workspace.
      operationId: orgWorkspaceMod_uninstall
      parameters:
      - description: The handle of an organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID to delete.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Uninstall mod from organization workspace.
      tags:
      - OrgWorkspaceMods
    get:
      description: Get organization workspace installed mod by mod alias
      operationId: orgWorkspaceMod_get
      parameters:
      - description: The handle of an organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get organization workspace installed mod
      tags:
      - OrgWorkspaceMods
    patch:
      description: Update a mod in an organization workspace
      operationId: orgWorkspaceMod_update
      parameters:
      - description: The handle of an organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod will be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID to update.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceModRequest'
        description: The request body to update a mod for this workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update a mod in an organization workspace
      tags:
      - OrgWorkspaceMods
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/mod/{mod_alias}/variable:
    get:
      description: List all variables applicable for a mod in a workspace specific
        to an organization
      operationId: orgWorkspaceModVariable_list
      parameters:
      - description: The handle of the organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which we want the variables to be
          listed.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceModVariablesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List variables in an organization workspace mod
      tags:
      - OrgWorkspaceModVariables
    post:
      description: Create a setting for a mod variable in an organization workspace
      operationId: orgWorkspaceModVariable_createSetting
      parameters:
      - description: The handle of the organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which the variable setting is to
          be created.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceModVariableSettingRequest'
        description: The request body to create setting for mod variable in the organization
          workspace.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create a setting for a mod variable in an organization workspace
      tags:
      - OrgWorkspaceModVariables
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/mod/{mod_alias}/variable/{variable_name}:
    delete:
      description: Delete setting for a mod variable in an organization workspace
      operationId: orgWorkspaceModVariable_deleteSetting
      parameters:
      - description: The handle of the organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID which contains the variable.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable to delete the setting for.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete setting for a mod variable in an organization workspace
      tags:
      - OrgWorkspaceModVariables
    get:
      description: Get setting for a mod variable in an organization workspace
      operationId: orgWorkspaceModVariable_getSetting
      parameters:
      - description: The handle of the organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which the variable setting belongs
          to.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable to get the setting for.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get setting for a mod variable in an organization workspace
      tags:
      - OrgWorkspaceModVariables
    patch:
      description: Update setting for a mod variable in an organization workspace
      operationId: orgWorkspaceModVariable_updateSetting
      parameters:
      - description: The handle of the organization that owns the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID which contains the variable.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable for which setting is to be updated.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceModVariableSettingRequest'
        description: The request body to update setting for mod variable in the organization
          workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update setting for a mod variable in an organization workspace
      tags:
      - OrgWorkspaceModVariables
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/pipeline:
    get:
      description: Lists the pipelines for a workspace of an organization.
      operationId: orgWorkspacePipeline_list
      parameters:
      - description: The handle of the organization which contains the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace for which we want to list the pipelines.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org workspace pipelines
      tags:
      - OrgWorkspacePipelines
    post:
      description: Creates a new pipeline for a workspace of an organization.
      operationId: orgWorkspacePipeline_create
      parameters:
      - description: The handle of the organization which contains the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where we want to create the pipeline.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        description: The request body for the pipeline to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org workspace pipeline
      tags:
      - OrgWorkspacePipelines
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/pipeline/{pipeline_id}:
    delete:
      description: Deletes the pipeline specified in the request for a workspace of
        an organization.
      operationId: orgWorkspacePipeline_delete
      parameters:
      - description: The handle of the organization which contains the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: Provide the id of the pipeline which needs to be deleted.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace pipeline
      tags:
      - OrgWorkspacePipelines
    get:
      description: Get the details of a pipeline for a workspace of an organization.
      operationId: orgWorkspacePipeline_get
      parameters:
      - description: The handle of the organization which contains the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline whose detail needs to be fetched.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org workspace pipeline
      tags:
      - OrgWorkspacePipelines
    patch:
      description: Updates a pipeline for a workspace of an organization.
      operationId: orgWorkspacePipeline_update
      parameters:
      - description: The handle of the organization which contains the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline which needs to be updated.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        description: The request body for the pipeline which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org workspace pipeline
      tags:
      - OrgWorkspacePipelines
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/query:
    get:
      description: Performs a query in an org workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      operationId: orgWorkspace_getQuery
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query org workspace
      tags:
      - OrgWorkspaces
    post:
      description: Performs a query in an org workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      operationId: orgWorkspace_postQuery
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/csv:
            schema:
              type: string
          text/markdown:
            schema:
              type: string
        description: The sql query to perform against the org workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: sql
  /org/{org_handle}/workspace/{workspace_handle}/query/data.{extensions}:
    get:
      description: Performs a query in an org workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      operationId: orgWorkspace_getQueryWithExtensions
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query org workspace with extensions
      tags:
      - OrgWorkspaces
    post:
      description: Performs a query in an org workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      operationId: orgWorkspace_postQueryWithExtensions
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query org workspace with extensions
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/schema:
    get:
      description: Returns the postgres schemas for an org workspace. This will consist
        of the connections associated with the workspace and any automatic aggregators
        prefixed with "all_", which are created for any connections where you have
        >=2 of that plugin type.
      operationId: orgWorkspace_getSchema
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to get the schemas for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSchema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org workspace schemas
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/snapshot:
    get:
      description: List the workspace snapshots for an org.
      operationId: orgWorkspaceSnapshot_list
      parameters:
      - description: The handle of the org to list the workspace snapshots for.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace to list snapshots for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceSnapshotsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List org workspace snapshots
      tags:
      - OrgWorkspaceSnapshots
    post:
      description: Creates a new workspace snapshot for an org.
      operationId: orgWorkspaceSnapshot_create
      parameters:
      - description: The handle of the org to create the workspace snapshot for.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace to create the snapshot for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceSnapshotRequest'
        description: The request body for the org workspace snapshot to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create org workspace snapshot
      tags:
      - OrgWorkspaceSnapshots
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/snapshot/{snapshot_id}:
    delete:
      description: Deletes an org workspace snapshot.
      operationId: orgWorkspaceSnapshot_delete
      parameters:
      - description: The handle of the org that the workspace snapshot belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot which needs to be deleted.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace snapshot
      tags:
      - OrgWorkspaceSnapshots
    get:
      description: Get the details for an org workspace snapshot.
      operationId: orgWorkspaceSnapshot_get
      parameters:
      - description: The handle of the org that the workspace snapshot belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot whose detail needs to be fetched.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get org workspace snapshot
      tags:
      - OrgWorkspaceSnapshots
    patch:
      description: Updates an org workspace snapshot.
      operationId: orgWorkspaceSnapshot_update
      parameters:
      - description: The handle of the org that the workspace snapshot belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot to update.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceSnapshotRequest'
        description: The request body for the org workspace snapshot to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update org workspace snapshot
      tags:
      - OrgWorkspaceSnapshots
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/snapshot/{snapshot_id}.{content_type}:
    get:
      description: Downloads the full data for an org workspace snapshot.
      operationId: orgWorkspaceSnapshot_download
      parameters:
      - description: The handle of the org that the workspace snapshot belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the org workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The Id of the snapshot to be downloaded.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: string
        style: simple
      - description: The type of content to the downloaded.
        explode: false
        in: path
        name: content_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshotData'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Download org workspace snapshot
      tags:
      - OrgWorkspaceSnapshots
    servers:
    - url: https://cloud.steampipe.io/download
  /signup:
    post:
      description: New user signup.
      operationId: auth_signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignupRequest'
        description: The request body to signup.
        required: true
      responses:
        "201":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User signup
      tags:
      - Auth
      x-codegen-request-body-name: request
  /signup/confirm:
    get:
      description: Confirm user signup.
      operationId: auth_confirmSignup
      parameters:
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Confirm user signup
      tags:
      - Auth
  /user:
    get:
      description: List the users.
      operationId: user_list
      parameters:
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List users
      tags:
      - Users
    post:
      description: Creates a new user.
      operationId: user_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: The request body to create the user.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}:
    delete:
      description: Deletes the specified user.
      operationId: user_delete
      parameters:
      - description: Specify the handle of the user which need to be deleted.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user
      tags:
      - Users
    get:
      description: Retrieves information of the specified user.
      operationId: user_get
      parameters:
      - description: Specify the handle of the user whose information you want to
          retrieve.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user
      tags:
      - Users
    patch:
      description: Updates the handle name, display name, or the URL of a user.
      operationId: user_update
      parameters:
      - description: Specify the handle of the user which need to be updated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: The request body for the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}/audit_log:
    get:
      description: Returns the audit logs for a user.
      operationId: user_listAuditLogs
      parameters:
      - description: Specify the user handle to get the audit logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User audit logs
      tags:
      - Users
  /user/{user_handle}/conn:
    get:
      description: List the connection for a user.
      operationId: userConnection_list
      parameters:
      - description: The handle of the user for which we want to list the connection.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user connections
      tags:
      - UserConnections
    post:
      description: Creates a new connection for a user.
      operationId: userConnection_create
      parameters:
      - description: The handle of the user where we want to create the connection.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        description: The request body for the connection to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user connection
      tags:
      - UserConnections
      x-codegen-request-body-name: request
  /user/{user_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the connection specified in the request by the user.
      operationId: userConnection_delete
      parameters:
      - description: The handle of the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the connection which needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user connection
      tags:
      - UserConnections
    get:
      description: Get the details for a connection.
      operationId: userConnection_get
      parameters:
      - description: The handle for the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection whose detail needs to be fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user connection
      tags:
      - UserConnections
    patch:
      description: Update a connection for a user.
      operationId: userConnection_update
      parameters:
      - description: The handle of the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection which needs to be updated.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionRequest'
        description: The request body for the connection which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user connection
      tags:
      - UserConnections
      x-codegen-request-body-name: request
  /user/{user_handle}/conn/{conn_handle}/test:
    post:
      description: Test the config for a user connection to check for basic connectivity
        before you create it.
      operationId: userConnection_test
      parameters:
      - description: The handle of the user performing the action.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection to be tested. For connections that
          are not yet created, use underscore `_` as the handle, else pass the handle
          of the existing connection.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTestResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Test user connection
      tags:
      - UserConnections
  /user/{user_handle}/email:
    get:
      description: List emails for a user along with other metadata information for
        each item.
      operationId: user_listEmails
      parameters:
      - description: Specify the handle of the user whose information you want to
          retrieve.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserEmailsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user emails
      tags:
      - Users
  /user/{user_handle}/email/{email_id}:
    get:
      description: Get a particular user email record along with its metadata information.
      operationId: user_getEmail
      parameters:
      - description: Specify the handle of the user whose information you want to
          retrieve.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the id of the email object you want to retrieve.
        explode: false
        in: path
        name: email_id
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user email
      tags:
      - Users
  /user/{user_handle}/feature:
    get:
      description: Returns the feature information for a user.
      operationId: user_listFeatures
      parameters:
      - description: Specify the user handle to get the feature details.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User features
      tags:
      - Users
  /user/{user_handle}/password:
    get:
      description: Get user password.
      operationId: user_getDBPassword
      parameters:
      - description: Specify the handle of the user whose password need to be retrieved.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDatabasePassword'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user password
      tags:
      - Users
    post:
      description: Create or rotate user password.
      operationId: user_createDBPassword
      parameters:
      - description: Specify the handle of the user whose password need to be created
          or rotated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPasswordRequest'
        description: The request body to create or rotate the password.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDatabasePassword'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user password
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}/pipeline:
    get:
      description: Lists the pipelines for a user.
      operationId: userPipeline_list
      parameters:
      - description: The handle of the user for which we want to list pipelines.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user pipelines
      tags:
      - UserPipelines
    post:
      description: Creates a new pipeline for a user.
      operationId: userPipeline_create
      parameters:
      - description: The handle of the user where we want to create the pipeline.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        description: The request body for the pipeline to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user pipeline
      tags:
      - UserPipelines
      x-codegen-request-body-name: request
  /user/{user_handle}/pipeline/{pipeline_id}:
    delete:
      description: Deletes the pipeline specified in the request of a user.
      operationId: userPipeline_delete
      parameters:
      - description: The handle of the user where the pipeline exists.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: Provide the id of the pipeline which needs to be deleted.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user pipeline
      tags:
      - UserPipelines
    get:
      description: Get the details of a pipeline for a user.
      operationId: userPipeline_get
      parameters:
      - description: The handle of the user where the pipeline exists.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline whose detail needs to be fetched.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user pipeline
      tags:
      - UserPipelines
    patch:
      description: Updates a pipeline for a user.
      operationId: userPipeline_update
      parameters:
      - description: The handle of the user where the pipeline exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline which needs to be updated.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        description: The request body for the pipeline which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user pipeline
      tags:
      - UserPipelines
      x-codegen-request-body-name: request
  /user/{user_handle}/preferences:
    get:
      description: Get preferences for the user such as email preferences.
      operationId: user_getPreferences
      parameters:
      - description: Specify the handle of the user whose preferences need to be retrieved.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user preferences
      tags:
      - Users
    patch:
      description: Update preferences for the user e.g. opting out of receiving certain
        kind of emails.
      operationId: user_updatePreferences
      parameters:
      - description: Specify the handle of the user whose preferences need to be retrieved.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPreferencesRequest'
        description: The request body for updating user preferences.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferences'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user preferences
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}/quota:
    get:
      description: Returns the quota information for a user.
      operationId: user_getQuota
      parameters:
      - description: Specify the user handle to get the quota details.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuota'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User quota
      tags:
      - Users
  /user/{user_handle}/token:
    get:
      description: List the token for a user.
      operationId: userToken_list
      parameters:
      - description: The handle of the user.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List tokens
      tags:
      - UserTokens
    post:
      description: Creates a new token for the specified user. The limit is 2 per
        user.
      operationId: userToken_create
      parameters:
      - description: The handle of the user where the token will be created.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create token
      tags:
      - UserTokens
  /user/{user_handle}/token/{token_id}:
    delete:
      description: Deletes the token associated with the specified user.
      operationId: userToken_delete
      parameters:
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete token
      tags:
      - UserTokens
    get:
      description: Retrieves the information of a specified token.
      operationId: userToken_get
      parameters:
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get token
      tags:
      - UserTokens
    patch:
      description: Changes the status of the specified token from Active to Inactive
        or vice versa.
      operationId: userToken_update
      parameters:
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
        description: The request body for the token which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update token
      tags:
      - UserTokens
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace:
    get:
      description: List the workspace for a user.
      operationId: userWorkspace_list
      parameters:
      - description: The handle of the user for which we want to list the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user workspaces
      tags:
      - UserWorkspaces
    post:
      description: Creates a new workspace for a user.
      operationId: userWorkspace_create
      parameters:
      - description: The handle of the user where we want to create the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        description: The request body for the workspace to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}:
    delete:
      description: Deletes the workspace specified in the request by the user.
      operationId: userWorkspace_delete
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the workspace which needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace
      tags:
      - UserWorkspaces
    get:
      description: Get the details for the workspace.
      operationId: userWorkspace_get
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose detail needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace
      tags:
      - UserWorkspaces
    patch:
      description: Update the workspace for a user.
      operationId: userWorkspace_update
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace which needs to be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
        description: The request body for the workspace which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/audit_log:
    get:
      description: Returns the audit logs for a user workspace.
      operationId: userWorkspace_listAuditLogs
      parameters:
      - description: Specify the user handle to get the audit logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User workspace audit logs
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/command:
    post:
      description: 'Run a command in the workspace. Valid commands are: reboot.'
      operationId: userWorkspace_command
      parameters:
      - description: The handle of the user where we want to run the workspace command.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where command will be executed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCommandRequest'
        description: The request body for the workspace command.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommandResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Run user workspace command
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/conn:
    get:
      description: List the connections associated with a workspace.
      operationId: userWorkspaceConnectionAssociation_list
      parameters:
      - description: The handle of the user for which you want to start listing associations.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where you want to list the associations.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceConnResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user workspace connection associations
      tags:
      - UserWorkspaceConnectionAssociations
    post:
      description: Associate a connection with the workspace. A workspace can have
        multiple association.
      operationId: userWorkspaceConnectionAssociation_create
      parameters:
      - description: The handle of the user where we want to create an association.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection will be associated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceConnRequest'
        description: The request body for the association to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/conn/{conn_handle}:
    delete:
      description: Dissociates or delete the workspace and connection association.
      operationId: userWorkspaceConnectionAssociation_delete
      parameters:
      - description: The handle of the user performing the action.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose association needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
    get:
      description: Get the details for a workspace and connection association.
      operationId: userWorkspaceConnectionAssociation_get
      parameters:
      - description: The handle of the user for which you want to get the association.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace wherethe association exist.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association details needs to be
          fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
  /user/{user_handle}/workspace/{workspace_handle}/db_log:
    get:
      description: Returns the workspace logs for a user.
      operationId: userWorkspace_listDBLogs
      parameters:
      - description: Specify the user handle to get the workspace logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: User workspace logs
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/mod:
    get:
      description: List user workspace installed mods
      operationId: userWorkspaceMod_list
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where mods were installed
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceModsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user workspace installed mods
      tags:
      - UserWorkspaceMods
    post:
      description: Install a mod to a user's workspace
      operationId: userWorkspaceMod_install
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod will be installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceModRequest'
        description: The request body to install a mod in the mentioned workspace
          for this user.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Install a mod to a user's workspace
      tags:
      - UserWorkspaceMods
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/mod/{mod_alias}:
    delete:
      description: Uninstall mod from a user's workspace
      operationId: userWorkspaceMod_uninstall
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID to delete.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Uninstall mod from a user's workspace.
      tags:
      - UserWorkspaceMods
    get:
      description: Get user workspace installed mod by mod alias
      operationId: userWorkspaceMod_get
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the workspace where mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace installed mod
      tags:
      - UserWorkspaceMods
    patch:
      description: Update a mod in a user's workspace
      operationId: userWorkspaceMod_update
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod will be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID to update.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceModRequest'
        description: The request body to update a mod for this workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update a mod in a user's workspace
      tags:
      - UserWorkspaceMods
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/mod/{mod_alias}/variable:
    get:
      description: List all variables applicable for a mod in a workspace specific
        to a user
      operationId: userWorkspaceModVariable_list
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where mods were installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which we want the variables to be
          listed.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceModVariablesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List variables for a user workspace mod
      tags:
      - UserWorkspaceModVariables
    post:
      description: Create a setting for a mod variable in a user workspace
      operationId: userWorkspaceModVariable_createSetting
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which the variable setting is to
          be created.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceModVariableSettingRequest'
        description: The request body to create setting for mod variable in the user
          workspace.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create a setting for a mod variable in a user workspace
      tags:
      - UserWorkspaceModVariables
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/mod/{mod_alias}/variable/{variable_name}:
    delete:
      description: Delete setting for a mod variable in a user workspace
      operationId: userWorkspaceModVariable_deleteSetting
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which the variable setting is to
          be deleted.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable to delete the setting for.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete setting for a mod variable in a user workspace
      tags:
      - UserWorkspaceModVariables
    get:
      description: Get setting for a mod variable in a user workspace
      operationId: userWorkspaceModVariable_getSetting
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID for which the variable setting belongs
          to.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable to get the setting for.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get setting for a mod variable in a user workspace
      tags:
      - UserWorkspaceModVariables
    patch:
      description: Update setting for a mod variable in a user workspace
      operationId: userWorkspaceModVariable_updateSetting
      parameters:
      - description: The handle of the user who owns the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the mod was installed.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The mod alias or mod ID which contains the variable.
        explode: false
        in: path
        name: mod_alias
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      - description: The name of the variable for which setting is to be updated.
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceModVariableSettingRequest'
        description: The request body to update setting for mod variable in the user
          workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceModVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update setting for a mod variable in a user workspace
      tags:
      - UserWorkspaceModVariables
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/pipeline:
    get:
      description: Lists the pipelines for a workspace of a user.
      operationId: userWorkspacePipeline_list
      parameters:
      - description: The handle of the user for which contains the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace for which we want to list the pipelines.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user workspace pipelines
      tags:
      - UserWorkspacePipelines
    post:
      description: Creates a new pipeline for a workspace of a user.
      operationId: userWorkspacePipeline_create
      parameters:
      - description: The handle of the user which contains the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where we want to create the pipeline.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        description: The request body for the pipeline to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user workspace pipeline
      tags:
      - UserWorkspacePipelines
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/pipeline/{pipeline_id}:
    delete:
      description: Deletes the pipeline specified in the request for a workspace of
        a user.
      operationId: userWorkspacePipeline_delete
      parameters:
      - description: The handle of the user which contains the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: Provide the id of the pipeline which needs to be deleted.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace pipeline
      tags:
      - UserWorkspacePipelines
    get:
      description: Get the details of a pipeline for a workspace of a user.
      operationId: userWorkspacePipeline_get
      parameters:
      - description: The handle of the user which contains the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline whose detail needs to be fetched.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace pipeline
      tags:
      - UserWorkspacePipelines
    patch:
      description: Updates a pipeline for a workspace of a user.
      operationId: userWorkspacePipeline_update
      parameters:
      - description: The handle of the user which contains the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The handle of the workspace where the pipeline exists.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]
          type: string
        style: simple
      - description: The id of the pipeline which needs to be updated.
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          format: ^pipe_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        description: The request body for the pipeline which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user workspace pipeline
      tags:
      - UserWorkspacePipelines
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/query:
    get:
      description: Performs a query in a user workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      operationId: userWorkspace_getQuery
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query user workspace
      tags:
      - UserWorkspaces
    post:
      description: Performs a query in a user workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      operationId: userWorkspace_postQuery
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/csv:
            schema:
              type: string
          text/markdown:
            schema:
              type: string
        description: The sql query to perform against the user workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: sql
  /user/{user_handle}/workspace/{workspace_handle}/query/data.{extensions}:
    get:
      description: Performs a query in a user workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      operationId: userWorkspace_getQueryWithExtensions
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query user workspace with extensions
      tags:
      - UserWorkspaces
    post:
      description: Performs a query in a user workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      operationId: userWorkspace_postQueryWithExtensions
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Query user workspace with extensions
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/schema:
    get:
      description: Returns the postgres schemas for a user workspace. This will consist
        of the connections associated with the workspace and any automatic aggregators
        prefixed with "all_", which are created for any connections where you have
        >=2 of that plugin type.
      operationId: userWorkspace_getSchema
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to get the schemas for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSchema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace schemas
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/snapshot:
    get:
      description: List the workspace snapshots for a user.
      operationId: userWorkspaceSnapshot_list
      parameters:
      - description: The handle of the user to list the workspace snapshots for.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to list snapshots for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The SQL where filter you wish to apply to this request. The filter
          will be parsed and sanitised and checked against the supported columns for
          this API.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: The max number of items to fetch per page of data, subject to
          a min and max of 1 and 100 respectively. If not specified will default to
          25.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When list results are truncated, next_token will be returned,
          which is a cursor to fetch the next page of data. Pass next_token to the
          subsequent list request to fetch the next page of data.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspaceSnapshotsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: List user workspace snapshots
      tags:
      - UserWorkspaceSnapshots
    post:
      description: Creates a new workspace snapshot for a user.
      operationId: userWorkspaceSnapshot_create
      parameters:
      - description: The handle of the user to create the workspace snapshot for.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the user workspace to create the snapshot for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceSnapshotRequest'
        description: The request body for the user workspace snapshot to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Create user workspace snapshot
      tags:
      - UserWorkspaceSnapshots
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/snapshot/{snapshot_id}:
    delete:
      description: Deletes a user workspace snapshot.
      operationId: userWorkspaceSnapshot_delete
      parameters:
      - description: The handle of the user that the workspace snapshot belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the user workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot which needs to be deleted.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace snapshot
      tags:
      - UserWorkspaceSnapshots
    get:
      description: Get the details for a user workspace snapshot.
      operationId: userWorkspaceSnapshot_get
      parameters:
      - description: The handle of the user that the workspace snapshot belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the user workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot whose detail needs to be fetched.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Get user workspace snapshot
      tags:
      - UserWorkspaceSnapshots
    patch:
      description: Updates a user workspace snapshot.
      operationId: userWorkspaceSnapshot_update
      parameters:
      - description: The handle of the user that the workspace snapshot belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the user workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the snapshot to update.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          format: ^[a-z]{1,3}_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceSnapshotRequest'
        description: The request body for the user workspace snapshot to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Update user workspace snapshot
      tags:
      - UserWorkspaceSnapshots
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/snapshot/{snapshot_id}.{content_type}:
    get:
      description: Downloads the full data for a user workspace snapshot.
      operationId: userWorkspaceSnapshot_download
      parameters:
      - description: The handle of the user that the workspace snapshot belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the user workspace that the snapshot belongs to.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The Id of the snapshot to be downloaded.
        explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: string
        style: simple
      - description: The type of content to the downloaded.
        explode: false
        in: path
        name: content_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshotData'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
      summary: Download user workspace snapshot
      tags:
      - UserWorkspaceSnapshots
    servers:
    - url: https://cloud.steampipe.io/download
components:
  schemas:
    SchemaInfo:
      example:
        tables:
        - columns:
          - data_type: data_type
            name: name
            description: description
          - data_type: data_type
            name: name
            description: description
          name: name
          description: description
        - columns:
          - data_type: data_type
            name: name
            description: description
          - data_type: data_type
            name: name
            description: description
          name: name
          description: description
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        tables:
          items:
            $ref: '#/components/schemas/SchemaTable'
          type: array
      required:
      - name
      - tables
      type: object
    SchemaTable:
      example:
        columns:
        - data_type: data_type
          name: name
          description: description
        - data_type: data_type
          name: name
          description: description
        name: name
        description: description
      properties:
        columns:
          items:
            $ref: '#/components/schemas/SchemaTableColumn'
          type: array
        description:
          type: string
        name:
          type: string
      required:
      - columns
      - name
      type: object
    SchemaTableColumn:
      example:
        data_type: data_type
        name: name
        description: description
      properties:
        data_type:
          type: string
        description:
          type: string
        name:
          type: string
      required:
      - data_type
      - name
      type: object
    WorkspaceSchema:
      example:
        duration: 0
        schemas:
        - tables:
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          name: name
          description: description
        - tables:
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          name: name
          description: description
      properties:
        duration:
          type: integer
        schemas:
          items:
            $ref: '#/components/schemas/SchemaInfo'
          type: array
      required:
      - duration
      - schemas
      type: object
    ErrorDetailModel:
      properties:
        location:
          type: string
        message:
          type: string
      type: object
    ErrorModel:
      properties:
        detail:
          type: string
        instance:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        validation_errors:
          items:
            $ref: '#/components/schemas/ErrorDetailModel'
          type: array
      required:
      - instance
      - status
      - title
      - type
      type: object
    ActorWorkspace:
      example:
        workspace_id: workspace_id
        workspace:
          hive: hive
          public_key: public_key
          database_name: database_name
          identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: aaa
          version_id: 0
          api_version: api_version
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          updated_at: updated_at
          host: host
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          cli_version: cli_version
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
        role: role
        database_name: database_name
        identity_id: identity_id
        identity:
          avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
          type: type
        host: host
        handle: handle
        id: id
      properties:
        database_name:
          type: string
        handle:
          type: string
        host:
          type: string
        id:
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
        identity_id:
          type: string
        role:
          type: string
        workspace:
          $ref: '#/components/schemas/Workspace'
        workspace_id:
          type: string
      type: object
    AssociationQuota:
      additionalProperties:
        $ref: '#/components/schemas/Quota'
      type: object
    AuditRecord:
      example:
        process_id: process_id
        identity_handle: identity_handle
        data: '{}'
        action_type: action_type
        identity_id: identity_id
        actor_display_name: actor_display_name
        created_at: created_at
        target_id: target_id
        actor_ip: actor_ip
        actor_avatar_url: actor_avatar_url
        actor_id: actor_id
        id: id
        target_handle: target_handle
        actor_handle: actor_handle
      properties:
        action_type:
          description: The action performed on the resource.
          type: string
        actor_avatar_url:
          type: string
        actor_display_name:
          description: The display name of an actor.
          type: string
        actor_handle:
          description: The handle name of an actor.
          type: string
        actor_id:
          description: The unique identifier of an actor.
          type: string
        actor_ip:
          type: string
        created_at:
          description: The time when the audit log was recorded.
          type: string
        data:
          type: object
        id:
          description: The unique identifier for an audit log.
          type: string
        identity_handle:
          description: The handle name for an identity where the action has been performed.
          type: string
        identity_id:
          description: The unique identifier for an identity where the action has
            been performed.
          type: string
        process_id:
          type: string
        target_handle:
          description: The handle name of the entity on which the action has been
            performed.
          type: string
        target_id:
          description: The unique identifier of the entity on which the action has
            been performed.
          type: string
      required:
      - action_type
      - actor_avatar_url
      - actor_display_name
      - actor_handle
      - actor_id
      - actor_ip
      - created_at
      - data
      - id
      - identity_handle
      - identity_id
      type: object
    Connection:
      example:
        identity_id: identity_id
        deleted_by_id: deleted_by_id
        created_at: created_at
        deleted_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        handle: handle
        version_id: 0
        type: type
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        deleted_at: deleted_at
        plugin: plugin
        updated_at: updated_at
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        config: '{}'
      properties:
        config:
          type: object
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        deleted_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        deleted_by:
          $ref: '#/components/schemas/User'
        deleted_by_id:
          description: The ID of the user that performed the deletion.
          format: ^u_[0-9a-v]{20}$
          type: string
        handle:
          description: The handle name of the  connection.
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
        id:
          description: The unique identifier for the connection.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity_id:
          description: The unique identifier for an identity where the connection
            has been created.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        plugin:
          description: The plugin name for the connection.
          type: string
        type:
          description: Type of connection i.e aggregator or connection.
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
      required:
      - created_at
      - created_by_id
      - deleted_by_id
      - handle
      - id
      - identity_id
      - updated_by_id
      - version_id
      type: object
    ConnectionConfig:
      type: object
    ConnectionTestResult:
      example:
        reason: reason
        status: status
      properties:
        reason:
          type: string
        status:
          type: string
      type: object
    CreateConnectionRequest:
      example:
        plugin: plugin
        handle: handle
        config: '{}'
      properties:
        config:
          properties: {}
          type: object
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
        plugin:
          description: Type   string                 `json:"type" binding:"required,steampipe_connection_type"`
          type: string
      required:
      - handle
      - plugin
      type: object
    CreateOrgRequest:
      example:
        avatar_url: avatar_url
        handle: handle
        display_name: display_name
        url: url
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]){0,18}[a-z0-9]?$
          type: string
        url:
          type: string
      required:
      - handle
      type: object
    CreateOrgWorkspaceUserRequest:
      example:
        role: role
        handle: handle
      properties:
        handle:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          type: string
      required:
      - handle
      - role
      type: object
    CreatePipelineRequest:
      example:
        args: '{}'
        pipeline: pipeline
        title: title
        frequency: '{}'
        tags: '{}'
      properties:
        args:
          description: A map of arguments to be passed to be pipeline.
          properties: {}
          type: object
        frequency:
          description: The frequency at which the pipeline will run.
          properties: {}
          type: object
        pipeline:
          description: The name of the pipeline to be executed.
          format: ^(pipeline\.save_snapshot|pipeline\.data_tank_schedule)$
          type: string
        tags:
          description: The tags for this pipeline.
          properties: {}
          type: object
        title:
          description: The title of the pipeline.
          type: string
      required:
      - args
      - frequency
      - pipeline
      - title
      type: object
    CreateUserPasswordRequest:
      example:
        expires_in_minutes: 0
      properties:
        expires_in_minutes:
          type: integer
      type: object
    CreateUserRequest:
      example:
        handle: handle
        display_name: display_name
        email: email
        url: url
      properties:
        display_name:
          type: string
        email:
          type: string
        handle:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]){0,18}[a-z0-9]?$
          type: string
        url:
          type: string
      required:
      - email
      - handle
      type: object
    CreateWorkspaceConnRequest:
      example:
        connection_handle: connection_handle
      properties:
        connection_handle:
          format: ^[a-z0-9][a-z0-9-]{1,37}[a-z0-9]$
          type: string
      required:
      - connection_handle
      type: object
    CreateWorkspaceModRequest:
      example:
        path: path
        constraint: constraint
      properties:
        constraint:
          type: string
        path:
          type: string
      required:
      - path
      type: object
    CreateWorkspaceModVariableSettingRequest:
      example:
        name: name
        setting: ""
      properties:
        name:
          type: string
        setting: {}
      required:
      - name
      - setting
      type: object
    CreateWorkspaceRequest:
      example:
        handle: handle
      properties:
        handle:
          format: ^[a-z0-9]{1,23}$
          type: string
      required:
      - handle
      type: object
    CreateWorkspaceSnapshotRequest:
      example:
        data:
          layout:
            children:
            - null
            - null
            panel_type: panel_type
            name: name
          schema_version: schema_version
          start_time: start_time
          variables: '{}'
          inputs: '{}'
          panels: '{}'
          end_time: end_time
        visibility: visibility
        title: title
        tags: ""
      properties:
        data:
          $ref: '#/components/schemas/WorkspaceSnapshotData'
        tags:
          nullable: true
        title:
          description: The title of the snapshot.
          type: string
        visibility:
          description: The visibility of the snapshot to create.
          type: string
      required:
      - data
      type: object
    Feature:
      example:
        updated_at: updated_at
        created_at: created_at
        version_id: 0
        value: value
        key: key
      properties:
        created_at:
          description: The creation time of the feature.
          type: string
        key:
          description: The key of the feature
          type: string
        updated_at:
          description: The update time of the feature.
          type: string
        value:
          description: The value of the feature
          type: string
        version_id:
          description: The current version of the feature.
          type: integer
      required:
      - created_at
      - version_id
      type: object
    Identity:
      example:
        avatar_url: avatar_url
        handle: handle
        id: id
        display_name: display_name
        type: type
      properties:
        avatar_url:
          description: The avatar URL of the identity.
          type: string
        display_name:
          description: The display name of the identity.
          type: string
        handle:
          description: The handle name of the identity.
          type: string
        id:
          description: The unique identifier of the identity.
          type: string
        type:
          description: The type of identity e.g. user or org.
          type: string
      required:
      - handle
      - id
      - type
      type: object
    InviteOrgUserRequest:
      example:
        role: role
        handle: handle
        email: email
      properties:
        email:
          type: string
        handle:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          type: string
      required:
      - role
      type: object
    JSONB:
      type: object
    ListActorWorkspacesResponse:
      example:
        next_token: next_token
        items:
        - workspace_id: workspace_id
          workspace:
            hive: hive
            public_key: public_key
            database_name: database_name
            identity_id: identity_id
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: aaa
            version_id: 0
            api_version: api_version
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            updated_at: updated_at
            host: host
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            cli_version: cli_version
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
            state: state
          role: role
          database_name: database_name
          identity_id: identity_id
          identity:
            avatar_url: avatar_url
            handle: handle
            id: id
            display_name: display_name
            type: type
          host: host
          handle: handle
          id: id
        - workspace_id: workspace_id
          workspace:
            hive: hive
            public_key: public_key
            database_name: database_name
            identity_id: identity_id
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: aaa
            version_id: 0
            api_version: api_version
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            updated_at: updated_at
            host: host
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            cli_version: cli_version
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
            state: state
          role: role
          database_name: database_name
          identity_id: identity_id
          identity:
            avatar_url: avatar_url
            handle: handle
            id: id
            display_name: display_name
            type: type
          host: host
          handle: handle
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/ActorWorkspace'
          type: array
        next_token:
          type: string
      type: object
    ListAuditLogsResponse:
      example:
        next_token: next_token
        items:
        - process_id: process_id
          identity_handle: identity_handle
          data: '{}'
          action_type: action_type
          identity_id: identity_id
          actor_display_name: actor_display_name
          created_at: created_at
          target_id: target_id
          actor_ip: actor_ip
          actor_avatar_url: actor_avatar_url
          actor_id: actor_id
          id: id
          target_handle: target_handle
          actor_handle: actor_handle
        - process_id: process_id
          identity_handle: identity_handle
          data: '{}'
          action_type: action_type
          identity_id: identity_id
          actor_display_name: actor_display_name
          created_at: created_at
          target_id: target_id
          actor_ip: actor_ip
          actor_avatar_url: actor_avatar_url
          actor_id: actor_id
          id: id
          target_handle: target_handle
          actor_handle: actor_handle
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditRecord'
          type: array
        next_token:
          type: string
      type: object
    ListConnectionsResponse:
      example:
        next_token: next_token
        items:
        - identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          type: type
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          plugin: plugin
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          config: '{}'
        - identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          type: type
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          plugin: plugin
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          config: '{}'
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        next_token:
          type: string
      type: object
    ListFeaturesResponse:
      example:
        items:
        - updated_at: updated_at
          created_at: created_at
          version_id: 0
          value: value
          key: key
        - updated_at: updated_at
          created_at: created_at
          version_id: 0
          value: value
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
      type: object
    ListIdentitiesResponse:
      example:
        next_token: next_token
        items:
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
          type: type
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
          type: type
      properties:
        items:
          items:
            $ref: '#/components/schemas/Identity'
          type: array
        next_token:
          type: string
      type: object
    ListLogsResponse:
      example:
        next_token: next_token
        items:
        - duration: 0
          log_timestamp: log_timestamp
          workspace_id: workspace_id
          actor_avatar_url: actor_avatar_url
          query: query
          actor_display_name: actor_display_name
          created_at: created_at
          workspace_handle: workspace_handle
          actor_id: actor_id
          id: id
          actor_handle: actor_handle
        - duration: 0
          log_timestamp: log_timestamp
          workspace_id: workspace_id
          actor_avatar_url: actor_avatar_url
          query: query
          actor_display_name: actor_display_name
          created_at: created_at
          workspace_handle: workspace_handle
          actor_id: actor_id
          id: id
          actor_handle: actor_handle
      properties:
        items:
          items:
            $ref: '#/components/schemas/LogRecord'
          type: array
        next_token:
          type: string
      type: object
    ListOrgUsersResponse:
      example:
        next_token: next_token
        items:
        - role: role
          user_handle: user_handle
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          scope: scope
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          status: invited
        - role: role
          user_handle: user_handle
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          scope: scope
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          status: invited
      properties:
        items:
          items:
            $ref: '#/components/schemas/OrgUser'
          type: array
        next_token:
          type: string
      type: object
    ListOrgWorkspaceUsersResponse:
      example:
        next_token: next_token
        items:
        - role: role
          user_handle: user_handle
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          workspace_id: workspace_id
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          scope: scope
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          workspace_handle: workspace_handle
          created_by_id: created_by_id
          id: id
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          status: status
        - role: role
          user_handle: user_handle
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          workspace_id: workspace_id
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          scope: scope
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          workspace_handle: workspace_handle
          created_by_id: created_by_id
          id: id
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/OrgWorkspaceUser'
          type: array
        next_token:
          type: string
      type: object
    ListOrgsResponse:
      example:
        next_token: next_token
        items:
        - deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          display_name: display_name
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          url: url
          avatar_url: avatar_url
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
        - deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          display_name: display_name
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          url: url
          avatar_url: avatar_url
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/Org'
          type: array
        next_token:
          type: string
      type: object
    ListPipelinesResponse:
      example:
        next_token: next_token
        items:
        - deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          version_id: 0
          title: title
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          frequency: '{}'
          tags: '{}'
          args: '{}'
          pipeline: pipeline
          workspace_id: workspace_id
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
        - deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          version_id: 0
          title: title
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          frequency: '{}'
          tags: '{}'
          args: '{}'
          pipeline: pipeline
          workspace_id: workspace_id
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/Pipeline'
          type: array
        next_token:
          type: string
      type: object
    ListTokensResponse:
      example:
        next_token: next_token
        items:
        - last4: last4
          updated_at: updated_at
          user_id: user_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
        - last4: last4
          updated_at: updated_at
          user_id: user_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        next_token:
          type: string
      type: object
    ListUserEmailsResponse:
      example:
        next_token: next_token
        items:
        - updated_at: updated_at
          created_at: created_at
          id: id
          version_id: 0
          email: email
          status: pending
        - updated_at: updated_at
          created_at: created_at
          id: id
          version_id: 0
          email: email
          status: pending
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserEmail'
          type: array
        next_token:
          type: string
      type: object
    ListUserOrgsResponse:
      example:
        next_token: next_token
        items:
        - role: role
          org:
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: handle
            version_id: 0
            display_name: display_name
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            url: url
            avatar_url: avatar_url
            updated_at: updated_at
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
          created_at: created_at
          version_id: 6
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          status: status
        - role: role
          org:
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: handle
            version_id: 0
            display_name: display_name
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            url: url
            avatar_url: avatar_url
            updated_at: updated_at
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
          created_at: created_at
          version_id: 6
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserOrg'
          type: array
        next_token:
          type: string
      type: object
    ListUsersResponse:
      example:
        next_token: next_token
        items:
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/User'
          type: array
        next_token:
          type: string
      type: object
    ListWorkspaceConnResponse:
      example:
        next_token: next_token
        items:
        - workspace_id: workspace_id
          updated_at: updated_at
          connection_id: connection_id
          identity_id: identity_id
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          created_at: created_at
          connection:
            identity_id: identity_id
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: handle
            version_id: 0
            type: type
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            plugin: plugin
            updated_at: updated_at
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
            config: '{}'
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
        - workspace_id: workspace_id
          updated_at: updated_at
          connection_id: connection_id
          identity_id: identity_id
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          created_at: created_at
          connection:
            identity_id: identity_id
            deleted_by_id: deleted_by_id
            created_at: created_at
            deleted_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            handle: handle
            version_id: 0
            type: type
            created_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            deleted_at: deleted_at
            plugin: plugin
            updated_at: updated_at
            updated_by:
              avatar_url: avatar_url
              updated_at: updated_at
              created_at: created_at
              handle: handle
              id: id
              version_id: 0
              display_name: display_name
              preview_access_mode: preview_access_mode
              url: url
              status: status
            updated_by_id: updated_by_id
            created_by_id: created_by_id
            id: id
            config: '{}'
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/WorkspaceConn'
          type: array
        next_token:
          type: string
      type: object
    ListWorkspaceModVariablesResponse:
      example:
        next_token: next_token
        items:
        - created_at: created_at
          description: description
          mod_alias: mod_alias
          version_id: 0
          type: type
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          value_setting: ""
          updated_at: updated_at
          value_default: ""
          name: name
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          value: ""
        - created_at: created_at
          description: description
          mod_alias: mod_alias
          version_id: 0
          type: type
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          value_setting: ""
          updated_at: updated_at
          value_default: ""
          name: name
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          value: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/WorkspaceModVariable'
          type: array
        next_token:
          type: string
      type: object
    ListWorkspaceModsResponse:
      example:
        next_token: next_token
        items:
        - identity_id: identity_id
          installed_version: installed_version
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          workspace_id: workspace_id
          path: path
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          alias: alias
          constraint: constraint
          details: details
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
        - identity_id: identity_id
          installed_version: installed_version
          created_at: created_at
          version_id: 0
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          workspace_id: workspace_id
          path: path
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          alias: alias
          constraint: constraint
          details: details
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
      properties:
        items:
          items:
            $ref: '#/components/schemas/WorkspaceMod'
          type: array
        next_token:
          type: string
      type: object
    ListWorkspaceSnapshotsResponse:
      example:
        next_token: next_token
        items:
        - dashboard_name: dashboard_name
          visibility: visibility
          identity_id: identity_id
          inputs: ""
          created_at: created_at
          version_id: 0
          title: title
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          tags: ""
          schema_version: schema_version
          workspace_id: workspace_id
          dashboard_title: dashboard_title
          expires_at: expires_at
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
        - dashboard_name: dashboard_name
          visibility: visibility
          identity_id: identity_id
          inputs: ""
          created_at: created_at
          version_id: 0
          title: title
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          tags: ""
          schema_version: schema_version
          workspace_id: workspace_id
          dashboard_title: dashboard_title
          expires_at: expires_at
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
      properties:
        items:
          description: Metadata  ListResponseMetadata `json:"metadata"`
          items:
            $ref: '#/components/schemas/WorkspaceSnapshot'
          type: array
        next_token:
          type: string
      type: object
    ListWorkspacesResponse:
      example:
        next_token: next_token
        items:
        - hive: hive
          public_key: public_key
          database_name: database_name
          identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: aaa
          version_id: 0
          api_version: api_version
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          updated_at: updated_at
          host: host
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          cli_version: cli_version
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
        - hive: hive
          public_key: public_key
          database_name: database_name
          identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: aaa
          version_id: 0
          api_version: api_version
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          updated_at: updated_at
          host: host
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          cli_version: cli_version
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          state: state
      properties:
        items:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
        next_token:
          type: string
      type: object
    LogRecord:
      example:
        duration: 0
        log_timestamp: log_timestamp
        workspace_id: workspace_id
        actor_avatar_url: actor_avatar_url
        query: query
        actor_display_name: actor_display_name
        created_at: created_at
        workspace_handle: workspace_handle
        actor_id: actor_id
        id: id
        actor_handle: actor_handle
      properties:
        actor_avatar_url:
          description: The avatar URL of the actor.
          type: string
        actor_display_name:
          description: The display name of the actor.
          type: string
        actor_handle:
          description: The actor handle who executed the query.
          type: string
        actor_id:
          description: The actor ID who executed the query.
          type: string
        created_at:
          description: The created time of the log.
          type: string
        duration:
          description: The duration of the query.
          type: integer
        id:
          description: The unique identifier of the DB log.
          type: string
        log_timestamp:
          description: The time when the log got captured in the postgres.
          type: string
        query:
          description: The query being executed in the workspace.
          type: string
        workspace_handle:
          description: The workspace handle where the query was executed.
          type: string
        workspace_id:
          description: The workspace ID where the query was executed.
          type: string
      required:
      - actor_avatar_url
      - actor_display_name
      - actor_handle
      - actor_id
      - created_at
      - id
      - workspace_handle
      - workspace_id
      type: object
    ModQuota:
      additionalProperties:
        $ref: '#/components/schemas/Quota'
      type: object
    Org:
      example:
        deleted_by_id: deleted_by_id
        created_at: created_at
        deleted_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        handle: handle
        version_id: 0
        display_name: display_name
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        deleted_at: deleted_at
        url: url
        avatar_url: avatar_url
        updated_at: updated_at
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
      properties:
        avatar_url:
          description: The avatar of an org.
          type: string
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        deleted_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        deleted_by:
          $ref: '#/components/schemas/User'
        deleted_by_id:
          description: The ID of the user that performed the deletion.
          format: ^u_[0-9a-v]{20}$
          type: string
        display_name:
          description: The display name of an org.
          type: string
        handle:
          description: The handle name for an org.
          type: string
        id:
          description: The unique identifier for an org.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        url:
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
      required:
      - created_at
      - created_by_id
      - deleted_by_id
      - handle
      - id
      - updated_by_id
      - version_id
      type: object
    OrgQuota:
      example:
        pipeline:
          key:
            available: 0
            limit: 6
            used: 1
        conn:
          available: 0
          limit: 6
          used: 1
        workspace:
          available: 0
          limit: 6
          used: 1
        mod:
          key:
            available: 0
            limit: 6
            used: 1
        member:
          available: 0
          limit: 6
          used: 1
        association:
          key:
            available: 0
            limit: 6
            used: 1
        snapshot:
          key:
            available: 0
            limit: 6
            used: 1
      properties:
        association:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        conn:
          $ref: '#/components/schemas/Quota'
        member:
          $ref: '#/components/schemas/Quota'
        mod:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        pipeline:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        snapshot:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        workspace:
          $ref: '#/components/schemas/Quota'
      required:
      - association
      - conn
      - member
      - mod
      - pipeline
      - snapshot
      - workspace
      type: object
    OrgUser:
      example:
        role: role
        user_handle: user_handle
        created_at: created_at
        version_id: 0
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_at: updated_at
        user_id: user_id
        org_id: org_id
        scope: scope
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        user:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        status: invited
      properties:
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        id:
          description: The unique identifier of the org member.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        org_id:
          description: The identifier of an org.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          description: The role of the org user.
          type: string
        scope:
          description: The scope of the role. Can be either of org / workspace
          type: string
        status:
          description: The status of the org member i.e invited or accepted.
          enum:
          - invited
          - accepted
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        user:
          $ref: '#/components/schemas/User'
        user_handle:
          description: The user handle of the member.
          type: string
        user_id:
          description: The identifier of a user.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
      required:
      - created_at
      - created_by_id
      - id
      - org_id
      - status
      - updated_by_id
      - user_handle
      - user_id
      - version_id
      type: object
    OrgWorkspaceUser:
      example:
        role: role
        user_handle: user_handle
        created_at: created_at
        version_id: 0
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        workspace_id: workspace_id
        updated_at: updated_at
        user_id: user_id
        org_id: org_id
        scope: scope
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        workspace_handle: workspace_handle
        created_by_id: created_by_id
        id: id
        user:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        status: status
      properties:
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        id:
          description: The unique identifier of the org member.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        org_id:
          description: The identifier of an org.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          description: The role of the workspace user.
          type: string
        scope:
          description: The scope of the role. Can be either of org / workspace
          type: string
        status:
          description: The status of the org member i.e pending or accepted.
          format: pending|accepted
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        user:
          $ref: '#/components/schemas/User'
        user_handle:
          description: The user handle of the member.
          type: string
        user_id:
          description: The identifier of a user.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
        workspace_handle:
          description: The handle of the workspace with identifier WorkspaceID.
          type: string
        workspace_id:
          description: The identifier of a workspace belonging to the organization.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - created_at
      - created_by_id
      - id
      - org_id
      - status
      - updated_by_id
      - user_handle
      - user_id
      - version_id
      - workspace_handle
      - workspace_id
      type: object
    Pipeline:
      example:
        deleted_by_id: deleted_by_id
        created_at: created_at
        deleted_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        version_id: 0
        title: title
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        deleted_at: deleted_at
        frequency: '{}'
        tags: '{}'
        args: '{}'
        pipeline: pipeline
        workspace_id: workspace_id
        updated_at: updated_at
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
      properties:
        args:
          description: A map of arguments to be passed to be pipeline.
          properties: {}
          type: object
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        deleted_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        deleted_by:
          $ref: '#/components/schemas/User'
        deleted_by_id:
          description: The ID of the user that performed the deletion.
          format: ^u_[0-9a-v]{20}$
          type: string
        frequency:
          description: The frequency at which the pipeline will run.
          properties: {}
          type: object
        id:
          description: The unique identifier of the pipeline.
          format: ^pipe_[0-9a-z]{25}$
          type: string
        pipeline:
          description: The name of the pipeline to be executed.
          format: ^(pipeline\.save_snapshot|pipeline\.data_tank_schedule)$
          type: string
        tags:
          description: The tags for this pipeline.
          properties: {}
          type: object
        title:
          description: The title of the pipeline.
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
        workspace_id:
          description: The unique identifier of the workspace on which the pipeline
            is created if any.
          format: ^w_[0-9a-v]{20}$
          type: string
      required:
      - created_at
      - created_by_id
      - deleted_by_id
      - frequency
      - id
      - pipeline
      - updated_by_id
      - version_id
      type: object
    PipelineQuota:
      additionalProperties:
        $ref: '#/components/schemas/Quota'
      type: object
    Quota:
      example:
        available: 0
        limit: 6
        used: 1
      properties:
        available:
          description: Remaining limit
          type: integer
        limit:
          description: Max limit
          type: integer
        used:
          description: Exhausted limit
          type: integer
      type: object
    SnapshotQuota:
      additionalProperties:
        $ref: '#/components/schemas/Quota'
      type: object
    TemporaryTokenRequest:
      example:
        code: code
        updated_at: updated_at
        created_at: created_at
        client_ip: client_ip
        id: id
        state: state
        token: token
      properties:
        client_ip:
          type: string
        code:
          type: string
        created_at:
          type: string
        id:
          type: string
        state:
          type: string
        token:
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
      required:
      - client_ip
      - code
      - created_at
      - id
      - state
      type: object
    Token:
      example:
        last4: last4
        updated_at: updated_at
        user_id: user_id
        created_at: created_at
        id: id
        version_id: 0
        status: status
      properties:
        created_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        last4:
          type: string
        status:
          type: string
        updated_at:
          type: string
        user_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - id
      - status
      - user_id
      - version_id
      type: object
    UpdateConnectionRequest:
      example:
        handle: handle
        config: '{}'
      properties:
        config:
          properties: {}
          type: object
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
      type: object
    UpdateOrgRequest:
      example:
        avatar_url: avatar_url
        handle: handle
        display_name: display_name
        url: url
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]){0,18}[a-z0-9]?$
          type: string
        url:
          type: string
      type: object
    UpdateOrgUserRequest:
      example:
        role: role
      properties:
        role:
          type: string
      required:
      - role
      type: object
    UpdateOrgWorkspaceUserRequest:
      example:
        role: role
      properties:
        role:
          type: string
      required:
      - role
      type: object
    UpdatePipelineRequest:
      example:
        args: '{}'
        title: title
        frequency: '{}'
        tags: '{}'
      properties:
        args:
          description: A map of arguments to be passed to be pipeline.
          properties: {}
          type: object
        frequency:
          description: The frequency at which the pipeline will run.
          properties: {}
          type: object
        tags:
          description: The tags for this pipeline.
          properties: {}
          type: object
        title:
          description: The title of the pipeline.
          type: string
      type: object
    UpdateTemporaryTokenRequest:
      example:
        state: state
      properties:
        state:
          type: string
      required:
      - state
      type: object
    UpdateTokenRequest:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    UpdateUserPreferencesRequest:
      example:
        communication_community_updates: enabled
        communication_product_updates: enabled
        communication_tips_and_tricks: enabled
      properties:
        communication_community_updates:
          enum:
          - enabled
          - disabled
          type: string
        communication_product_updates:
          enum:
          - enabled
          - disabled
          type: string
        communication_tips_and_tricks:
          enum:
          - enabled
          - disabled
          type: string
      type: object
    UpdateUserRequest:
      example:
        avatar_url: avatar_url
        handle: handle
        display_name: display_name
        url: url
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9]{1,2}(?:[a-z0-9]{1,2}|-[a-z0-9]){0,18}[a-z0-9]?$
          type: string
        url:
          type: string
      type: object
    UpdateWorkspaceModRequest:
      example:
        constraint: constraint
      properties:
        constraint:
          type: string
      required:
      - constraint
      type: object
    UpdateWorkspaceModVariableSettingRequest:
      example:
        setting: ""
      properties:
        setting: {}
      required:
      - setting
      type: object
    UpdateWorkspaceRequest:
      example:
        handle: handle
      properties:
        handle:
          format: ^[a-z0-9]{1,23}$
          type: string
      type: object
    UpdateWorkspaceSnapshotRequest:
      example:
        visibility: visibility
        title: title
        tags: ""
      properties:
        tags:
          nullable: true
        title:
          description: The updated title for the snapshot.
          type: string
        visibility:
          description: The updated visibility for the snapshot.
          type: string
      type: object
    User:
      example:
        avatar_url: avatar_url
        updated_at: updated_at
        created_at: created_at
        handle: handle
        id: id
        version_id: 0
        display_name: display_name
        preview_access_mode: preview_access_mode
        url: url
        status: status
      properties:
        avatar_url:
          type: string
        created_at:
          description: The user created time.
          type: string
        display_name:
          type: string
        handle:
          description: The handle name of a user.
          type: string
        id:
          description: The unique identifier of a user.
          format: ^u_[0-9a-v]{20}$
          type: string
        preview_access_mode:
          type: string
        status:
          description: The status of the user i.e accepted or pending
          type: string
        updated_at:
          description: The user updated time.
          type: string
        url:
          type: string
        version_id:
          description: The current version of a user.
          type: integer
      required:
      - created_at
      - handle
      - id
      - status
      - version_id
      type: object
    UserDatabasePassword:
      example:
        expires_at: expires_at
        user_id: user_id
        $password: $password
        created_at: created_at
        id: id
      properties:
        $password:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        user_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - $password
      - created_at
      - id
      type: object
    UserEmail:
      example:
        updated_at: updated_at
        created_at: created_at
        id: id
        version_id: 0
        email: email
        status: pending
      properties:
        created_at:
          description: The time when the user setting was created.
          type: string
        email:
          description: The email address of the user.
          type: string
        id:
          description: The unique identifier of the user email record.
          format: ^up_[0-9a-v]{20}$
          type: string
        status:
          description: The status of the email id i.e. whether its pending verification
            or verified.
          enum:
          - pending
          - verified
          type: string
        updated_at:
          description: The time when the user setting was last updated.
          type: string
        version_id:
          description: The current version of the user setting.
          type: integer
      required:
      - created_at
      - email
      - status
      - version_id
      type: object
    UserLoginRequest:
      example:
        state: state
        email: email
      properties:
        email:
          type: string
        state:
          type: string
      required:
      - email
      type: object
    UserOrg:
      example:
        role: role
        org:
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          display_name: display_name
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          url: url
          avatar_url: avatar_url
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
        created_at: created_at
        version_id: 6
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_at: updated_at
        user_id: user_id
        org_id: org_id
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        status: status
      properties:
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        org:
          $ref: '#/components/schemas/Org'
        org_id:
          type: string
        role:
          type: string
        status:
          format: pending|accepted
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        user_id:
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
      required:
      - created_at
      - created_by_id
      - id
      - org_id
      - role
      - status
      - updated_by_id
      - user_id
      - version_id
      type: object
    UserPreferences:
      example:
        communication_community_updates: communication_community_updates
        updated_at: updated_at
        communication_product_updates: communication_product_updates
        created_at: created_at
        id: id
        version_id: 0
        communication_tips_and_tricks: communication_tips_and_tricks
      properties:
        communication_community_updates:
          description: Whether the user is subscribed to community update emails.
          type: string
        communication_product_updates:
          description: Whether the user is subscribed to product update emails.
          type: string
        communication_tips_and_tricks:
          description: Whether the user is subscribed to tips and tricks emails.
          type: string
        created_at:
          description: The time when the user setting was created.
          type: string
        id:
          description: The unique identifier of the user preferences record.
          format: ^up_[0-9a-v]{20}$
          type: string
        updated_at:
          description: The time when the user setting was last updated.
          type: string
        version_id:
          description: The current version of the user setting.
          type: integer
      required:
      - communication_community_updates
      - communication_product_updates
      - communication_tips_and_tricks
      - created_at
      - version_id
      type: object
    UserQuota:
      example:
        pipeline:
          key:
            available: 0
            limit: 6
            used: 1
        conn:
          available: 0
          limit: 6
          used: 1
        workspace:
          available: 0
          limit: 6
          used: 1
        mod:
          key:
            available: 0
            limit: 6
            used: 1
        organization:
          available: 0
          limit: 6
          used: 1
        association:
          key:
            available: 0
            limit: 6
            used: 1
        snapshot:
          key:
            available: 0
            limit: 6
            used: 1
        token:
          available: 0
          limit: 6
          used: 1
      properties:
        association:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        conn:
          $ref: '#/components/schemas/Quota'
        mod:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        organization:
          $ref: '#/components/schemas/Quota'
        pipeline:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        snapshot:
          additionalProperties:
            $ref: '#/components/schemas/Quota'
          type: object
        token:
          $ref: '#/components/schemas/Quota'
        workspace:
          $ref: '#/components/schemas/Quota'
      required:
      - association
      - conn
      - mod
      - organization
      - pipeline
      - snapshot
      - token
      - workspace
      type: object
    UserSignupRequest:
      example:
        state: state
        email: email
      properties:
        email:
          type: string
        state:
          type: string
      required:
      - email
      type: object
    Workspace:
      example:
        hive: hive
        public_key: public_key
        database_name: database_name
        identity_id: identity_id
        deleted_by_id: deleted_by_id
        created_at: created_at
        deleted_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        handle: aaa
        version_id: 0
        api_version: api_version
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        deleted_at: deleted_at
        updated_at: updated_at
        host: host
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        cli_version: cli_version
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        state: state
      properties:
        api_version:
          type: string
        cli_version:
          type: string
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        database_name:
          description: The name of the database.
          type: string
        deleted_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        deleted_by:
          $ref: '#/components/schemas/User'
        deleted_by_id:
          description: The ID of the user that performed the deletion.
          format: ^u_[0-9a-v]{20}$
          type: string
        handle:
          description: The handle name for the workspace.
          example: aaa
          format: ^[a-z0-9]{1,23}$
          type: string
        hive:
          description: The database hive for this workspace.
          type: string
        host:
          type: string
        id:
          description: The unique identifier for the workspace.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity_id:
          description: The unique identifier for an identity where the workspace is
            created.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        public_key:
          type: string
        state:
          description: The current state of the workspace.
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
      required:
      - created_at
      - created_by_id
      - deleted_by_id
      - handle
      - id
      - identity_id
      - updated_by_id
      - version_id
      type: object
    WorkspaceCommandRequest:
      example:
        command: command
      properties:
        command:
          type: string
      required:
      - command
      type: object
    WorkspaceCommandResponse:
      example:
        process_id: process_id
        command: command
      properties:
        command:
          type: string
        process_id:
          format: ^p_[0-9a-v]{20}$
          type: string
      required:
      - command
      - process_id
      type: object
    WorkspaceConn:
      example:
        workspace_id: workspace_id
        updated_at: updated_at
        connection_id: connection_id
        identity_id: identity_id
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        created_at: created_at
        connection:
          identity_id: identity_id
          deleted_by_id: deleted_by_id
          created_at: created_at
          deleted_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          handle: handle
          version_id: 0
          type: type
          created_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          deleted_at: deleted_at
          plugin: plugin
          updated_at: updated_at
          updated_by:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            preview_access_mode: preview_access_mode
            url: url
            status: status
          updated_by_id: updated_by_id
          created_by_id: created_by_id
          id: id
          config: '{}'
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        version_id: 0
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
      properties:
        connection:
          $ref: '#/components/schemas/Connection'
        connection_id:
          description: The unique identifier for the connection.
          type: string
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        id:
          description: The unique identifier for the workspace connection association.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity_id:
          description: The identity ID where the association exists.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
        workspace_id:
          description: The unique identifier for the wokspace.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - connection_id
      - created_at
      - created_by_id
      - id
      - identity_id
      - updated_by_id
      - version_id
      - workspace_id
      type: object
    WorkspaceMod:
      example:
        identity_id: identity_id
        installed_version: installed_version
        created_at: created_at
        version_id: 0
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        workspace_id: workspace_id
        path: path
        updated_at: updated_at
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        alias: alias
        constraint: constraint
        details: details
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        state: state
      properties:
        alias:
          format: ^[a-z0-9-_]{1,40}$
          type: string
        constraint:
          type: string
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        details:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity_id:
          description: The unique identifier for an identity where the workspace mod
            has been install.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        installed_version:
          type: string
        path:
          type: string
        state:
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
        workspace_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - created_at
      - created_by_id
      - id
      - identity_id
      - updated_by_id
      - version_id
      - workspace_id
      type: object
    WorkspaceModVariable:
      example:
        created_at: created_at
        description: description
        mod_alias: mod_alias
        version_id: 0
        type: type
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        value_setting: ""
        updated_at: updated_at
        value_default: ""
        name: name
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        value: ""
      properties:
        created_at:
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        description:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        mod_alias:
          type: string
        name:
          type: string
        type:
          type: string
        updated_at:
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        value:
          nullable: true
        value_default:
          nullable: true
        value_setting:
          nullable: true
        version_id:
          type: integer
      required:
      - created_at
      - created_by_id
      - id
      - updated_by_id
      - version_id
      type: object
    WorkspaceQueryResult:
      example:
        columns:
        - data_type: data_type
          name: name
          max_data_length: 0
        - data_type: data_type
          name: name
          max_data_length: 0
        rows:
        - '{}'
        - '{}'
      properties:
        columns:
          items:
            $ref: '#/components/schemas/WorkspaceQueryResultColumn'
          type: array
        rows:
          items:
            properties: {}
            type: object
          type: array
      required:
      - columns
      - rows
      type: object
    WorkspaceQueryResultColumn:
      example:
        data_type: data_type
        name: name
        max_data_length: 0
      properties:
        data_type:
          type: string
        max_data_length:
          type: integer
        name:
          type: string
      required:
      - data_type
      - name
      type: object
    WorkspaceSnapshot:
      example:
        dashboard_name: dashboard_name
        visibility: visibility
        identity_id: identity_id
        inputs: ""
        created_at: created_at
        version_id: 0
        title: title
        created_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        tags: ""
        schema_version: schema_version
        workspace_id: workspace_id
        dashboard_title: dashboard_title
        expires_at: expires_at
        updated_at: updated_at
        updated_by:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          preview_access_mode: preview_access_mode
          url: url
          status: status
        updated_by_id: updated_by_id
        created_by_id: created_by_id
        id: id
        state: state
      properties:
        created_at:
          description: The time of creation in ISO 8601 UTC.
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_by_id:
          description: The ID of the user that created this.
          format: ^u_[0-9a-v]{20}$
          type: string
        dashboard_name:
          description: The mod-prefixed name of the dashboard this snapshot belongs
            to.
          type: string
        dashboard_title:
          description: The title of the dashboard this snapshot belongs to.
          type: string
        expires_at:
          description: The time when the snapshot will expire.
          type: string
        id:
          description: The unique identifier for the snapshot.
          format: ^snap_[0-9a-z]{25}$
          type: string
        identity_id:
          description: The unique identifier for the identity that the snapshot belongs
            to.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        inputs:
          nullable: true
        schema_version:
          description: The schema version of the underlying snapshot.
          type: string
        state:
          description: The current state of the snapshot.
          type: string
        tags:
          nullable: true
        title:
          description: The title of the snapshot.
          type: string
        updated_at:
          description: The time of the last update in ISO 8601 UTC.
          type: string
        updated_by:
          $ref: '#/components/schemas/User'
        updated_by_id:
          description: The ID of the user that performed the last update.
          format: ^u_[0-9a-v]{20}$
          type: string
        version_id:
          description: The version ID of this item. Pass this version ID via an If-Match
            header when performing mutation operations on the item.
          type: integer
        visibility:
          description: The visibility of the snapshot.
          type: string
        workspace_id:
          description: The unique identifier for the workspace that the snapshot belongs
            to.
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - created_at
      - created_by_id
      - dashboard_name
      - dashboard_title
      - id
      - identity_id
      - schema_version
      - updated_by_id
      - version_id
      - workspace_id
      type: object
    WorkspaceSnapshotData:
      example:
        layout:
          children:
          - null
          - null
          panel_type: panel_type
          name: name
        schema_version: schema_version
        start_time: start_time
        variables: '{}'
        inputs: '{}'
        panels: '{}'
        end_time: end_time
      properties:
        end_time:
          description: The time the dashboard execution ended.
          type: string
        inputs:
          type: object
        layout:
          $ref: '#/components/schemas/WorkspaceSnapshotDataLayout'
        panels:
          type: object
        schema_version:
          description: The schema version of this snapshot.
          type: string
        start_time:
          description: The time the dashboard execution started.
          type: string
        variables:
          type: object
      required:
      - end_time
      - layout
      - panels
      - schema_version
      - start_time
      type: object
    WorkspaceSnapshotDataLayout:
      example:
        children:
        - null
        - null
        panel_type: panel_type
        name: name
      properties:
        children:
          items:
            $ref: '#/components/schemas/WorkspaceSnapshotDataLayout'
          type: array
        name:
          type: string
        panel_type:
          type: string
      required:
      - name
      - panel_type
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
