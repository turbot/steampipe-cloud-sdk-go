openapi: 3.0.1
info:
  contact:
    email: help@steampipe.io
    name: Support
  description: Interrogate your CloudOps data with the simplicity and power of SQL,
    then share your discoveries using Steampipe Cloud.
  title: Steampipe Cloud
  version: "1.0"
servers:
- url: https://cloud.steampipe.io/api/v1
paths:
  /actor:
    get:
      description: Returns the actor information.
      operationId: actor_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Actor information
      tags:
      - Actors
  /actor/activity:
    get:
      description: List the activity for an actor.
      operationId: actor_listActivity
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List actor activity
      tags:
      - Actors
  /actor/conn:
    get:
      description: List the connections for an actor.
      operationId: actor_listConnections
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List actor connections
      tags:
      - Actors
  /actor/workspace:
    get:
      description: List the workspace for an actor.
      operationId: actor_listWorkspaces
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List actor workspaces
      tags:
      - Actors
  /auth/{provider}:
    get:
      description: With an authentication provider, users can access Steampipe Cloud
        with single sign-on (SSO) using credentials from a third party. Steampipe
        Cloud currently supports GitHub as an authentication provider.
      operationId: auth_provider
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Auth Provider
      tags:
      - Auth
  /auth/{provider}/callback:
    get:
      description: Auth provider callback.
      operationId: auth_providerCallback
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Auth provider callback
      tags:
      - Auth
  /identity/search:
    get:
      description: Search identity handle name.
      operationId: identity_search
      parameters:
      - description: Specify the search string.
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.SearchIdentitiesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Search identity
      tags:
      - Identities
  /login:
    post:
      description: User login.
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UserLoginRequest'
        description: The request body to login.
        required: true
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User login
      tags:
      - Auth
      x-codegen-request-body-name: request
  /login/confirm:
    get:
      description: Confirm user login.
      operationId: auth_confirmLogin
      parameters:
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Confirm user login
      tags:
      - Auth
  /logout/{provider}:
    get:
      description: Removes the session that is associated with the user.
      operationId: auth_logout
      parameters:
      - description: The authentication provider.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "307":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User logout
      tags:
      - Auth
  /org:
    get:
      description: List all the organizations.
      operationId: org_list
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List orgs
      tags:
      - Orgs
    post:
      description: Creates an organization.
      operationId: org_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateOrgRequest'
        description: The request body to create the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Org'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create org
      tags:
      - Orgs
      x-codegen-request-body-name: request
  /org/{org_handle}:
    delete:
      description: Deletes the specified organization if you have the appropriate
        access.
      operationId: org_delete
      parameters:
      - description: Specify the handle of the organization which need to be deleted.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Org'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org
      tags:
      - Orgs
    get:
      description: Retrieves the organization information.
      operationId: org_get
      parameters:
      - description: Specify the handle of an organization whose information you want
          to retrive.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Org'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org
      tags:
      - Orgs
    patch:
      description: Updates the handle name, display name or the URl of the organization.
      operationId: org_update
      parameters:
      - description: Specify the handle of the organization which need to be updated.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateOrgRequest'
        description: The request body for the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Org'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update org
      tags:
      - Orgs
      x-codegen-request-body-name: request
  /org/{org_handle}/audit:
    get:
      description: Returns the audit logs for an org.
      operationId: orgAudit_listAuditLogs
      parameters:
      - description: Specify the org handle to get the audit logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Org audit logs
      tags:
      - Orgs
  /org/{org_handle}/conn:
    get:
      description: List the connection for an organization. The action supports list
        pagination and does not return more than 50 connections at a time.If there
        are more connections to list, then there is a value in next_token. You can
        use the next_token value to continue the pagination of the list by passing
        the value in next_token in the request to get the next page.
      operationId: orgConnection_list
      parameters:
      - description: The handle of the organization for which we want to list the
          connections.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List org connections
      tags:
      - OrgConnections
    post:
      description: Creates a new connection for an organization. The limit is 10 per
        organization. If you require more than 10, you must contact support to request
        an increase.
      operationId: orgConnection_create
      parameters:
      - description: The handle of the organization where we want to create the connection.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateConnectionRequest'
        description: The request body for the connection to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create org connection
      tags:
      - OrgConnections
      x-codegen-request-body-name: request
  /org/{org_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the connection specified in the request.
      operationId: orgConnection_delete
      parameters:
      - description: The handle of the organization where the connection exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the connection which needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org connection
      tags:
      - OrgConnections
    get:
      description: Get the details for a connection.
      operationId: orgConnection_get
      parameters:
      - description: The handle of an organization where the connection exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection whose detail needs to be fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org connection
      tags:
      - OrgConnections
    patch:
      description: Update the connection in an organization.
      operationId: orgConnection_update
      parameters:
      - description: The handle of the organization where the connection exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection which needs to be updated.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateConnectionRequest'
        description: The request body of the connection which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update org connection
      tags:
      - OrgConnections
      x-codegen-request-body-name: request
  /org/{org_handle}/conn/{conn_handle}/test:
    post:
      description: Test the config for an org connection to check for basic connectivity
        before you create it.
      operationId: orgConnection_test
      parameters:
      - description: The handle of the org performing the action.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection to be tested. For connections that
          are not yet created, use underscore `_` as the handle, else pass the handle
          of the existing connection.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ConnectionTestResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Test org connection
      tags:
      - OrgConnections
  /org/{org_handle}/member:
    get:
      description: List all the members who has accepted the request.
      operationId: orgMember_listAccepted
      parameters:
      - description: Specify the organization handle.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListOrgUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List accepted org members
      tags:
      - OrgMembers
  /org/{org_handle}/member/invite:
    delete:
      description: Delete the org member invite.
      operationId: orgMember_deleteInvite
      parameters:
      - description: Specify the organization handle.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the token to be rejected.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org member invite
      tags:
      - OrgMembers
    get:
      description: List all the members who has been invited to the org.
      operationId: orgMember_listInvited
      parameters:
      - description: Specify the organization handle.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListOrgUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List invited org members
      tags:
      - OrgMembers
    post:
      description: Invite member to an org.
      operationId: orgMember_invite
      parameters:
      - description: Specify the handle of an organization where the member need to
          be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.InviteOrgUserRequest'
        description: The request body to invite a member to an organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Invite org member
      tags:
      - OrgMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/member/invite/confirm:
    get:
      description: Confirm org member invite.
      operationId: orgMember_confirmInvite
      parameters:
      - description: Specify the handle of an organization where the member need to
          be invited.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Confirm org member invite
      tags:
      - OrgMembers
  /org/{org_handle}/member/{user_handle}:
    delete:
      description: Delete the user from the org.
      operationId: orgMember_delete
      parameters:
      - description: Specify the handle of the organization where the member exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user which need to be removed.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org member
      tags:
      - OrgMembers
    get:
      description: Get org member.
      operationId: orgMember_get
      parameters:
      - description: Specify the organization handle where the member is associated.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose information you want to
          retrive.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org member
      tags:
      - OrgMembers
    patch:
      description: Update the role of the member.
      operationId: orgMember_update
      parameters:
      - description: Specify the handle of the organization where the member exists.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Specify the handle of the user whose role need to be updated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateOrgUserRequest'
        description: The request body for the member.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrgUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update org member
      tags:
      - OrgMembers
      x-codegen-request-body-name: request
  /org/{org_handle}/quota:
    get:
      description: Returns the quota information for an org.
      operationId: org_getQuota
      parameters:
      - description: Specify the org handle to get the quota details.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrgQuota'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Org quota
      tags:
      - Orgs
  /org/{org_handle}/workspace:
    get:
      description: List the workspace for an organization. The action supports list
        pagination and does not return more than 50 workspaces at a time.If there
        are more workspaces to list, then there is a value in next_token. You can
        use the next_token value to continue the pagination of the list by passing
        the value in next_token in the request to get the next page.
      operationId: orgWorkspace_list
      parameters:
      - description: The handle of the organization for which we want to list the
          workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List org workspaces
      tags:
      - OrgWorkspaces
    post:
      description: Creates a new workspace for an organization. The limit is 10 per
        organization. If you require more than 10, you must contact support to request
        an increase.
      operationId: orgWorkspace_create
      parameters:
      - description: The handle of the organization where we want to create the workspace.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateWorkspaceRequest'
        description: The request body for the workspace to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}:
    delete:
      description: Deletes the workspace specified in the request.
      operationId: orgWorkspace_delete
      parameters:
      - description: The handle of the organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the workspace which needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace
      tags:
      - OrgWorkspaces
    get:
      description: Get the details for a workspace in an organization.
      operationId: orgWorkspace_get
      parameters:
      - description: The handle for an organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose detail needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org workspace
      tags:
      - OrgWorkspaces
    patch:
      description: Update a workspace in an organization.
      operationId: orgWorkspace_update
      parameters:
      - description: The handle of the organization where the workspace exist.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace which needs to be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateWorkspaceRequest'
        description: The request body of the workspace which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/audit:
    get:
      description: Returns the audit logs for an org workspace.
      operationId: orgAudit_listWorkspaceAuditLogs
      parameters:
      - description: Specify the org handle to get the audit logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Org workspace audit logs
      tags:
      - Orgs
  /org/{org_handle}/workspace/{workspace_handle}/conn:
    get:
      description: List the connections associated with a workspace.
      operationId: orgWorkspaceConnectionAssociation_list
      parameters:
      - description: The handle of an organization for which you want to list the
          associations.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where you want to list the associations.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListWorkspaceConnResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List org workspace connection associations
      tags:
      - OrgWorkspaceConnectionAssociations
    post:
      description: Associate a connection with the workspace. A workspace can have
        multiple association.
      operationId: orgWorkspaceConnectionAssociation_create
      parameters:
      - description: The handle of the organization where we want to create an association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection will be associated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateWorkspaceConnRequest'
        description: The request body for the association to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
      x-codegen-request-body-name: request
  /org/{org_handle}/workspace/{workspace_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the workspace association with the connection.
      operationId: orgWorkspaceConnectionAssociation_delete
      parameters:
      - description: The handle of an organization where we want to delete the association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose association needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
    get:
      description: Get the details for a workspace and connection association on an
        organization.
      operationId: orgWorkspaceConnectionAssociation_get
      parameters:
      - description: The handle of the org for which you want to get the association.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection exist.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association details needs to be
          fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org workspace connection association
      tags:
      - OrgWorkspaceConnectionAssociations
  /org/{org_handle}/workspace/{workspace_handle}/logs:
    get:
      description: Returns the workspace logs for an org.
      operationId: orgWorkspace_listDBLogs
      parameters:
      - description: Specify the org handle to get the workspace logs.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Org workspace logs
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/query:
    get:
      description: Performs a query in an org workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query org workspace
      tags:
      - OrgWorkspaces
    post:
      description: Performs a query in an org workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/csv:
            schema:
              type: string
          text/markdown:
            schema:
              type: string
        description: The sql query to perform against the org workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query org workspace
      tags:
      - OrgWorkspaces
      x-codegen-request-body-name: sql
  /org/{org_handle}/workspace/{workspace_handle}/query/data.{extensions}:
    get:
      description: Performs a query in an org workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query org workspace with extensions
      tags:
      - OrgWorkspaces
    post:
      description: Performs a query in an org workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the org workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query org workspace with extensions
      tags:
      - OrgWorkspaces
  /org/{org_handle}/workspace/{workspace_handle}/schema:
    get:
      description: Returns the postgres schemas for an org workspace. This will consist
        of the connections associated with the workspace and any automatic aggregators
        prefixed with "all_", which are created for any connections where you have
        >=2 of that plugin type.
      parameters:
      - description: The handle of the org that the workspace belongs to.
        explode: false
        in: path
        name: org_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to get the schemas for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query.WorkspaceSchema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get org workspace schemas
      tags:
      - OrgWorkspaces
  /signup:
    post:
      description: New user signup.
      operationId: auth_signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UserSignupRequest'
        description: The request body to signup.
        required: true
      responses:
        "201":
          content: {}
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User signup
      tags:
      - Auth
      x-codegen-request-body-name: request
  /signup/confirm:
    get:
      description: Confirm user signup.
      operationId: auth_confirmSignup
      parameters:
      - description: Specify the token.
        explode: true
        in: query
        name: t
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content: {}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Confirm user signup
      tags:
      - Auth
  /user:
    get:
      description: List the users.
      operationId: user_list
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List users
      tags:
      - Users
    post:
      description: Creates a new user.
      operationId: user_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateUserRequest'
        description: The request body to create the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create user
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/search:
    get:
      description: Search users and lists the ones that meet the filter criteria.
      operationId: user_search
      parameters:
      - description: Specify the search string.
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.SearchUsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Search users
      tags:
      - Users
  /user/{user_handle}:
    delete:
      description: Deletes the specified user.
      operationId: user_delete
      parameters:
      - description: Specify the handle of the user which need to be deleted.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.User'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete user
      tags:
      - Users
    get:
      description: Retrives information of the specified user.
      operationId: user_get
      parameters:
      - description: Specify the handle of the user whose information you want to
          retrive.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user
      tags:
      - Users
    patch:
      description: Updates the handle name, display name or the URl of the user.
      operationId: user_update
      parameters:
      - description: Specify the handle of the user which need to be updated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateUserRequest'
        description: The request body for the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update user
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}/audit:
    get:
      description: Returns the audit logs for a user.
      operationId: userAudit_listAuditLogs
      parameters:
      - description: Specify the user handle to get the audit logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User audit logs
      tags:
      - Users
  /user/{user_handle}/conn:
    get:
      description: List the connection for an user.
      operationId: userConnection_list
      parameters:
      - description: The handle of the user for which we want to list the connection.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListConnectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List user connections
      tags:
      - UserConnections
    post:
      description: Creates a new connection for a user. The limit is 5 per user. If
        you require more than 5, you must contact support to request an increase.
      operationId: userConnection_create
      parameters:
      - description: The handle of the user where we want to create the connection.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateConnectionRequest'
        description: The request body for the connection to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create user connection
      tags:
      - UserConnections
      x-codegen-request-body-name: request
  /user/{user_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the connection specified in the request by the user.
      operationId: userConnection_delete
      parameters:
      - description: The handle of the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the connection which needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete user connection
      tags:
      - UserConnections
    get:
      description: Get the details for a connection.
      operationId: userConnection_get
      parameters:
      - description: The handle for the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection whose detail needs to be fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user connection
      tags:
      - UserConnections
    patch:
      description: Update a connection for a user.
      operationId: userConnection_update
      parameters:
      - description: The handle of the user where the connection exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection which needs to be updated.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateConnectionRequest'
        description: The request body for the connection which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Connection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update user connection
      tags:
      - UserConnections
      x-codegen-request-body-name: request
  /user/{user_handle}/conn/{conn_handle}/test:
    post:
      description: Test the config for a user connection to check for basic connectivity
        before you create it.
      operationId: userConnection_test
      parameters:
      - description: The handle of the user performing the action.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the connection to be tested. For connections that
          are not yet created, use underscore `_` as the handle, else pass the handle
          of the existing connection.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ConnectionTestResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Test user connection
      tags:
      - UserConnections
  /user/{user_handle}/org:
    get:
      description: List the orgs which the user has access.
      operationId: user_listOrgs
      parameters:
      - description: The handle of the user for which we want to list the org.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListUserOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List org users
      tags:
      - Users
  /user/{user_handle}/org/invite:
    get:
      description: List the orgs on which the user has been invited.
      operationId: user_listOrgInvites
      parameters:
      - description: Pass the handle of the user.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListUserOrgsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List org invited users
      tags:
      - Users
  /user/{user_handle}/password:
    get:
      description: Get user password.
      operationId: user_getDBPassword
      parameters:
      - description: Specify the handle of the user whose password need to be retrieved.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.UserDatabasePassword'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user password
      tags:
      - Users
    post:
      description: Create or rotate user password.
      operationId: user_createDBPassword
      parameters:
      - description: Specify the handle of the user whose password need to be created
          or rotated.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateUserPasswordRequest'
        description: The request body to create or rotate the password.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.UserDatabasePassword'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create user password
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/{user_handle}/quota:
    get:
      description: Returns the quota information for a user.
      operationId: user_getQuota
      parameters:
      - description: Specify the user handle to get the quota details.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.UserQuota'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User quota
      tags:
      - Users
  /user/{user_handle}/token:
    get:
      description: List the token for a user. The action supports list pagination
        and does not return more than 50 tokens at a time.If there are more tokens
        to list, then there is a value in next_token. You can use the next_token value
        to continue the pagination of the list by passing the value in next_token
        in the request to get the next page.
      operationId: userToken_list
      parameters:
      - description: The handle of the user.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListTokensResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List tokens
      tags:
      - UserTokens
    post:
      description: Creates a new token for the specified user. The limit is 2 per
        user. If you require more than 5, you must contact support to request an increase.
      operationId: userToken_create
      parameters:
      - description: The handle of the user where the token will be created.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create token
      tags:
      - UserTokens
  /user/{user_handle}/token/{token_id}:
    delete:
      description: Deletes the token associated with the specified user.
      operationId: userToken_delete
      parameters:
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Token'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete token
      tags:
      - UserTokens
    get:
      description: Retrives the information of a specified token.
      operationId: userToken_get
      parameters:
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get token
      tags:
      - UserTokens
    patch:
      description: Changes the status of the specified token from Active to Inactive
        or vice versa.
      operationId: userToken_update
      parameters:
      - description: The handle of the user where the token exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The identifier of the token.
        explode: false
        in: path
        name: token_id
        required: true
        schema:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateTokenRequest'
        description: The request body for the token which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update token
      tags:
      - UserTokens
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace:
    get:
      description: List the workspace for a user.
      operationId: userWorkspace_list
      parameters:
      - description: The handle of the user for which we want to list the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List user workspaces
      tags:
      - UserWorkspaces
    post:
      description: Creates a new workspace for a user. The limit is 5 per user. If
        you require more than 5, you must contact support to request an increase.
      operationId: userWorkspace_create
      parameters:
      - description: The handle of the user where we want to create the workspace.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateWorkspaceRequest'
        description: The request body for the workspace to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}:
    delete:
      description: Deletes the workspace specified in the request by the user.
      operationId: userWorkspace_delete
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: Provide the handle of the workspace which needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace
      tags:
      - UserWorkspaces
    get:
      description: Get the details for the workspace.
      operationId: userWorkspace_get
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose detail needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user workspace
      tags:
      - UserWorkspaces
    patch:
      description: Update the workspace for a user.
      operationId: userWorkspace_update
      parameters:
      - description: The handle of the user where the workspace exist.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace which needs to be updated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateWorkspaceRequest'
        description: The request body for the workspace which needs to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.Workspace'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Update user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/audit:
    get:
      description: Returns the audit logs for a user workspace.
      operationId: userAudit_listWorkspaceAuditLogs
      parameters:
      - description: Specify the user handle to get the audit logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: An optional token returned from a prior request. When a list
          is truncated this element specifies the last part of the list, as well as
          the value to use for the part-number-marker request parameter in a subsequent
          request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User workspace audit logs
      tags:
      - Users
  /user/{user_handle}/workspace/{workspace_handle}/conn:
    get:
      description: List the connections associated with a workspace.
      operationId: userWorkspaceConnectionAssociation_list
      parameters:
      - description: The handle of the user for which you want to start listing associations.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where you want to list the associations.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: When a list is truncated this element specifies the last part
          of the list, as well as the value to use for the part-number-marker request
          parameter in a subsequent request.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListWorkspaceConnResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: List user workspace connection associations
      tags:
      - UserWorkspaceConnectionAssociations
    post:
      description: Associate a connection with the workspace. A workspace can have
        multiple association.
      operationId: userWorkspaceConnectionAssociation_create
      parameters:
      - description: The handle of the user where we want to create an association.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace where the connection will be associated.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateWorkspaceConnRequest'
        description: The request body for the association to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Create user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
      x-codegen-request-body-name: request
  /user/{user_handle}/workspace/{workspace_handle}/conn/{conn_handle}:
    delete:
      description: Deletes the workspace association with the connection.
      operationId: userWorkspaceConnectionAssociation_delete
      parameters:
      - description: The handle of the user performing the action.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose association needs to be deleted.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association needs to be deleted.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Delete user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
    get:
      description: Get the details for a workspace and connection association.
      operationId: userWorkspaceConnectionAssociation_get
      parameters:
      - description: The handle of the user for which you want to get the association.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace wherethe association exist.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The handle of the conn whose association details needs to be
          fetched.
        explode: false
        in: path
        name: conn_handle
        required: true
        schema:
          format: ^[a-z][a-z0-9_]{0,37}[a-z0-9]?$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceConn'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user workspace connection association
      tags:
      - UserWorkspaceConnectionAssociations
  /user/{user_handle}/workspace/{workspace_handle}/logs:
    get:
      description: Returns the workspace logs for a user.
      operationId: userWorkspace_listDBLogs
      parameters:
      - description: Specify the user handle to get the workspace logs.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace whose logs needs to be fetched.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ListLogsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: User workspace logs
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/query:
    get:
      description: Performs a query in a user workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query user workspace
      tags:
      - UserWorkspaces
    post:
      description: Performs a query in a user workspace. Results are limited to 3000
        rows or 30 seconds of query execution.
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/csv:
            schema:
              type: string
          text/markdown:
            schema:
              type: string
        description: The sql query to perform against the user workspace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query user workspace
      tags:
      - UserWorkspaces
      x-codegen-request-body-name: sql
  /user/{user_handle}/workspace/{workspace_handle}/query/data.{extensions}:
    get:
      description: Performs a query in a user workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query user workspace with extensions
      tags:
      - UserWorkspaces
    post:
      description: Performs a query in a user workspace, with content type and content
        encoding forming part of the API path. Results are limited to 3000 rows or
        30 seconds of query execution.
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to query.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      - description: 'The content type for the request. E.g. '
        explode: false
        in: path
        name: extensions
        required: true
        schema:
          type: string
        style: simple
      - description: The sql query to perform against the user workspace.
        explode: true
        in: query
        name: sql
        required: true
        schema:
          type: string
        style: form
      - description: The required content type for the response. Defaults to application/json.
          Supported values are json, application/json, csv, text/csv, md and text/markdown.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
            text/markdown:
              schema:
                $ref: '#/components/schemas/types.WorkspaceQueryResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/csv:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
            text/markdown:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Query user workspace with extensions
      tags:
      - UserWorkspaces
  /user/{user_handle}/workspace/{workspace_handle}/schema:
    get:
      description: Returns the postgres schemas for a user workspace. This will consist
        of the connections associated with the workspace and any automatic aggregators
        prefixed with "all_", which are created for any connections where you have
        >=2 of that plugin type.
      parameters:
      - description: The handle of the user that the workspace belongs to.
        explode: false
        in: path
        name: user_handle
        required: true
        schema:
          format: ^[a-z0-9][a-z0-9-]{0,37}[a-z0-9]$
          type: string
        style: simple
      - description: The handle of the workspace to get the schemas for.
        explode: false
        in: path
        name: workspace_handle
        required: true
        schema:
          format: ^[a-z0-9]{1,23}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/query.WorkspaceSchema'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Payment Required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sperr.ErrorModel'
          description: Internal Server Error
      summary: Get user workspace schemas
      tags:
      - UserWorkspaces
components:
  schemas:
    query.SchemaInfo:
      example:
        tables:
        - columns:
          - data_type: data_type
            name: name
            description: description
          - data_type: data_type
            name: name
            description: description
          name: name
          description: description
        - columns:
          - data_type: data_type
            name: name
            description: description
          - data_type: data_type
            name: name
            description: description
          name: name
          description: description
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        tables:
          items:
            $ref: '#/components/schemas/query.SchemaTable'
          type: array
      required:
      - name
      - tables
      type: object
    query.SchemaTable:
      example:
        columns:
        - data_type: data_type
          name: name
          description: description
        - data_type: data_type
          name: name
          description: description
        name: name
        description: description
      properties:
        columns:
          items:
            $ref: '#/components/schemas/query.SchemaTableColumn'
          type: array
        description:
          type: string
        name:
          type: string
      required:
      - columns
      - name
      type: object
    query.SchemaTableColumn:
      example:
        data_type: data_type
        name: name
        description: description
      properties:
        data_type:
          type: string
        description:
          type: string
        name:
          type: string
      required:
      - data_type
      - name
      type: object
    query.WorkspaceSchema:
      example:
        duration: 0
        schemas:
        - tables:
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          name: name
          description: description
        - tables:
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          - columns:
            - data_type: data_type
              name: name
              description: description
            - data_type: data_type
              name: name
              description: description
            name: name
            description: description
          name: name
          description: description
      properties:
        duration:
          type: integer
        schemas:
          items:
            $ref: '#/components/schemas/query.SchemaInfo'
          type: array
      required:
      - duration
      - schemas
      type: object
    sperr.ErrorDetailModel:
      properties:
        location:
          type: string
        message:
          type: string
        value:
          type: string
      type: object
    sperr.ErrorModel:
      properties:
        detail:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/sperr.ErrorDetailModel'
          type: array
        id:
          type: string
        instance:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      required:
      - id
      - status
      - title
      - type
      type: object
    types.AssociationQuota:
      additionalProperties:
        $ref: '#/components/schemas/types.Quota'
      type: object
    types.AuditRecord:
      example:
        identity_handle: identity_handle
        data: '{}'
        action_type: action_type
        identity_id: identity_id
        actor_display_name: actor_display_name
        created_at: created_at
        target_id: target_id
        actor_ip: actor_ip
        actor_avatar_url: actor_avatar_url
        actor_id: actor_id
        id: id
        target_handle: target_handle
        actor_handle: actor_handle
      properties:
        action_type:
          type: string
        actor_avatar_url:
          type: string
        actor_display_name:
          type: string
        actor_handle:
          type: string
        actor_id:
          type: string
        actor_ip:
          type: string
        created_at:
          type: string
        data:
          type: object
        id:
          type: string
        identity_handle:
          type: string
        identity_id:
          type: string
        target_handle:
          type: string
        target_id:
          type: string
      required:
      - action_type
      - actor_avatar_url
      - actor_display_name
      - actor_handle
      - actor_id
      - actor_ip
      - created_at
      - data
      - id
      - identity_handle
      - identity_id
      type: object
    types.Connection:
      example:
        plugin: plugin
        updated_at: updated_at
        identity_id: identity_id
        identity:
          handle: handle
          id: id
          display_name: display_name
          type: type
        created_at: created_at
        handle: handle
        id: id
        version_id: 0
        type: type
        config: '{}'
      properties:
        config:
          type: object
        created_at:
          type: string
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity:
          $ref: '#/components/schemas/types.Identity'
        identity_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        plugin:
          type: string
        type:
          type: string
        updated_at:
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - handle
      - id
      - identity_id
      - version_id
      type: object
    types.ConnectionConfig:
      type: object
    types.ConnectionTestResult:
      example:
        reason: reason
        status: status
      properties:
        reason:
          type: string
        status:
          type: string
      type: object
    types.CreateConnectionRequest:
      properties:
        config:
          properties: {}
          type: object
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
        plugin:
          description: Type   string                 `json:"type" binding:"required,steampipe_connection_type"`
          type: string
      required:
      - handle
      - plugin
      type: object
    types.CreateOrgRequest:
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9](?:[a-z0-9]|-(?=[a-z0-9])){0,38}$
          type: string
        url:
          type: string
      required:
      - handle
      type: object
    types.CreateUserPasswordRequest:
      properties:
        expires_in_minutes:
          type: integer
      type: object
    types.CreateUserRequest:
      properties:
        display_name:
          type: string
        email:
          type: string
        handle:
          format: ^[a-z0-9](?:[a-z0-9]|-(?=[a-z0-9])){0,38}$
          type: string
        url:
          type: string
      required:
      - email
      - handle
      type: object
    types.CreateWorkspaceConnRequest:
      properties:
        connection_handle:
          format: ^[a-z0-9][a-z0-9-]{1,37}[a-z0-9]$
          type: string
      required:
      - connection_handle
      type: object
    types.CreateWorkspaceRequest:
      properties:
        handle:
          format: ^[a-z0-9]{1,23}$
          type: string
      required:
      - handle
      type: object
    types.Identity:
      example:
        handle: handle
        id: id
        display_name: display_name
        type: type
      properties:
        display_name:
          type: string
        handle:
          type: string
        id:
          type: string
        type:
          type: string
      required:
      - handle
      - id
      - type
      type: object
    types.IdentitySearch:
      example:
        avatar_url: avatar_url
        handle: handle
        id: id
        display_name: display_name
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          type: string
        id:
          type: string
      required:
      - handle
      - id
      type: object
    types.InviteOrgUserRequest:
      properties:
        email:
          type: string
        handle:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          type: string
      required:
      - role
      type: object
    types.JSONB:
      type: object
    types.ListAuditLogsResponse:
      example:
        next_token: next_token
        items:
        - identity_handle: identity_handle
          data: '{}'
          action_type: action_type
          identity_id: identity_id
          actor_display_name: actor_display_name
          created_at: created_at
          target_id: target_id
          actor_ip: actor_ip
          actor_avatar_url: actor_avatar_url
          actor_id: actor_id
          id: id
          target_handle: target_handle
          actor_handle: actor_handle
        - identity_handle: identity_handle
          data: '{}'
          action_type: action_type
          identity_id: identity_id
          actor_display_name: actor_display_name
          created_at: created_at
          target_id: target_id
          actor_ip: actor_ip
          actor_avatar_url: actor_avatar_url
          actor_id: actor_id
          id: id
          target_handle: target_handle
          actor_handle: actor_handle
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.AuditRecord'
          type: array
        next_token:
          type: string
      type: object
    types.ListConnectionsResponse:
      example:
        next_token: next_token
        items:
        - plugin: plugin
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          type: type
          config: '{}'
        - plugin: plugin
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          type: type
          config: '{}'
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.Connection'
          type: array
        next_token:
          type: string
      type: object
    types.ListLogsResponse:
      example:
        next_token: next_token
        items:
        - duration: 0
          log_timestamp: log_timestamp
          workspace_id: workspace_id
          actor_avatar_url: actor_avatar_url
          query: query
          actor_display_name: actor_display_name
          created_at: created_at
          workspace_handle: workspace_handle
          actor_id: actor_id
          id: id
          actor_handle: actor_handle
        - duration: 0
          log_timestamp: log_timestamp
          workspace_id: workspace_id
          actor_avatar_url: actor_avatar_url
          query: query
          actor_display_name: actor_display_name
          created_at: created_at
          workspace_handle: workspace_handle
          actor_id: actor_id
          id: id
          actor_handle: actor_handle
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.LogRecord'
          type: array
        next_token:
          type: string
      type: object
    types.ListOrgUsersResponse:
      example:
        next_token: next_token
        items:
        - role: role
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          user_handle: user_handle
          created_at: created_at
          id: id
          version_id: 0
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            email: email
            preview_access_mode: preview_access_mode
            url: url
            status: status
          email: email
          status: status
        - role: role
          updated_at: updated_at
          user_id: user_id
          org_id: org_id
          user_handle: user_handle
          created_at: created_at
          id: id
          version_id: 0
          user:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            email: email
            preview_access_mode: preview_access_mode
            url: url
            status: status
          email: email
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.OrgUser'
          type: array
        next_token:
          type: string
      type: object
    types.ListOrgsResponse:
      example:
        next_token: next_token
        items:
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          url: url
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          url: url
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.Org'
          type: array
        next_token:
          type: string
      type: object
    types.ListTokensResponse:
      example:
        next_token: next_token
        items:
        - last4: last4
          updated_at: updated_at
          user_id: user_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
        - last4: last4
          updated_at: updated_at
          user_id: user_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.Token'
          type: array
        next_token:
          type: string
      type: object
    types.ListUserOrgsResponse:
      example:
        next_token: next_token
        items:
        - role: role
          updated_at: updated_at
          org:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            url: url
          user_id: user_id
          org_id: org_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
        - role: role
          updated_at: updated_at
          org:
            avatar_url: avatar_url
            updated_at: updated_at
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            display_name: display_name
            url: url
          user_id: user_id
          org_id: org_id
          created_at: created_at
          id: id
          version_id: 0
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.UserOrg'
          type: array
        next_token:
          type: string
      type: object
    types.ListUsersResponse:
      example:
        next_token: next_token
        items:
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          email: email
          preview_access_mode: preview_access_mode
          url: url
          status: status
        - avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          email: email
          preview_access_mode: preview_access_mode
          url: url
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.User'
          type: array
        next_token:
          type: string
      type: object
    types.ListWorkspaceConnResponse:
      example:
        next_token: next_token
        items:
        - workspace_id: workspace_id
          workspace:
            hive: hive
            public_key: public_key
            database_name: database_name
            updated_at: updated_at
            identity_id: identity_id
            identity:
              handle: handle
              id: id
              display_name: display_name
              type: type
            host: host
            created_at: created_at
            workspace_state: workspace_state
            handle: aaa
            id: id
            version_id: 0
          updated_at: updated_at
          connection_id: connection_id
          identity_id: identity_id
          created_at: created_at
          connection:
            plugin: plugin
            updated_at: updated_at
            identity_id: identity_id
            identity:
              handle: handle
              id: id
              display_name: display_name
              type: type
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            type: type
            config: '{}'
          id: id
          version_id: 0
        - workspace_id: workspace_id
          workspace:
            hive: hive
            public_key: public_key
            database_name: database_name
            updated_at: updated_at
            identity_id: identity_id
            identity:
              handle: handle
              id: id
              display_name: display_name
              type: type
            host: host
            created_at: created_at
            workspace_state: workspace_state
            handle: aaa
            id: id
            version_id: 0
          updated_at: updated_at
          connection_id: connection_id
          identity_id: identity_id
          created_at: created_at
          connection:
            plugin: plugin
            updated_at: updated_at
            identity_id: identity_id
            identity:
              handle: handle
              id: id
              display_name: display_name
              type: type
            created_at: created_at
            handle: handle
            id: id
            version_id: 0
            type: type
            config: '{}'
          id: id
          version_id: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.WorkspaceConn'
          type: array
        next_token:
          type: string
      type: object
    types.ListWorkspacesResponse:
      example:
        next_token: next_token
        items:
        - hive: hive
          public_key: public_key
          database_name: database_name
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          host: host
          created_at: created_at
          workspace_state: workspace_state
          handle: aaa
          id: id
          version_id: 0
        - hive: hive
          public_key: public_key
          database_name: database_name
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          host: host
          created_at: created_at
          workspace_state: workspace_state
          handle: aaa
          id: id
          version_id: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.Workspace'
          type: array
        next_token:
          type: string
      type: object
    types.LogRecord:
      example:
        duration: 0
        log_timestamp: log_timestamp
        workspace_id: workspace_id
        actor_avatar_url: actor_avatar_url
        query: query
        actor_display_name: actor_display_name
        created_at: created_at
        workspace_handle: workspace_handle
        actor_id: actor_id
        id: id
        actor_handle: actor_handle
      properties:
        actor_avatar_url:
          type: string
        actor_display_name:
          type: string
        actor_handle:
          type: string
        actor_id:
          type: string
        created_at:
          type: string
        duration:
          type: integer
        id:
          type: string
        log_timestamp:
          type: string
        query:
          type: string
        workspace_handle:
          type: string
        workspace_id:
          type: string
      required:
      - actor_avatar_url
      - actor_display_name
      - actor_handle
      - actor_id
      - created_at
      - id
      - workspace_handle
      - workspace_id
      type: object
    types.Org:
      example:
        avatar_url: avatar_url
        updated_at: updated_at
        created_at: created_at
        handle: handle
        id: id
        version_id: 0
        display_name: display_name
        url: url
      properties:
        avatar_url:
          type: string
        created_at:
          type: string
        display_name:
          type: string
        handle:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        updated_at:
          type: string
        url:
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - handle
      - id
      - version_id
      type: object
    types.OrgQuota:
      example:
        conn:
          available: 0
          limit: 6
          used: 1
        workspace:
          available: 0
          limit: 6
          used: 1
        association:
          key:
            available: 0
            limit: 6
            used: 1
      properties:
        association:
          additionalProperties:
            $ref: '#/components/schemas/types.Quota'
          type: object
        conn:
          $ref: '#/components/schemas/types.Quota'
        workspace:
          $ref: '#/components/schemas/types.Quota'
      required:
      - association
      - conn
      - workspace
      type: object
    types.OrgUser:
      example:
        role: role
        updated_at: updated_at
        user_id: user_id
        org_id: org_id
        user_handle: user_handle
        created_at: created_at
        id: id
        version_id: 0
        user:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          email: email
          preview_access_mode: preview_access_mode
          url: url
          status: status
        email: email
        status: status
      properties:
        created_at:
          type: string
        email:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        org_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        role:
          type: string
        status:
          format: pending|accepted
          type: string
        updated_at:
          type: string
        user:
          $ref: '#/components/schemas/types.User'
        user_handle:
          type: string
        user_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        version_id:
          type: integer
      required:
      - email
      - id
      - org_id
      - status
      - user_handle
      - user_id
      type: object
    types.Quota:
      example:
        available: 0
        limit: 6
        used: 1
      properties:
        available:
          type: integer
        limit:
          type: integer
        used:
          type: integer
      type: object
    types.SearchIdentitiesResponse:
      example:
        items:
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.IdentitySearch'
          type: array
      type: object
    types.SearchUsersResponse:
      example:
        next_token: next_token
        items:
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
        - avatar_url: avatar_url
          handle: handle
          id: id
          display_name: display_name
      properties:
        items:
          items:
            $ref: '#/components/schemas/types.UserSearch'
          type: array
        next_token:
          type: string
      type: object
    types.Token:
      example:
        last4: last4
        updated_at: updated_at
        user_id: user_id
        created_at: created_at
        id: id
        version_id: 0
        status: status
      properties:
        created_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        last4:
          type: string
        status:
          type: string
        updated_at:
          type: string
        user_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - id
      - status
      - user_id
      - version_id
      type: object
    types.UpdateConnectionRequest:
      properties:
        config:
          properties: {}
          type: object
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
      type: object
    types.UpdateOrgRequest:
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9](?:[a-z0-9]|-(?=[a-z0-9])){0,38}$
          type: string
        url:
          type: string
      type: object
    types.UpdateOrgUserRequest:
      properties:
        role:
          type: string
      required:
      - role
      type: object
    types.UpdateTokenRequest:
      properties:
        status:
          type: string
      required:
      - status
      type: object
    types.UpdateUserRequest:
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z0-9](?:[a-z0-9]|-(?=[a-z0-9])){0,38}$
          type: string
        url:
          type: string
      type: object
    types.UpdateWorkspaceRequest:
      properties:
        handle:
          format: ^[a-z0-9]{1,23}$
          type: string
      type: object
    types.User:
      example:
        avatar_url: avatar_url
        updated_at: updated_at
        created_at: created_at
        handle: handle
        id: id
        version_id: 0
        display_name: display_name
        email: email
        preview_access_mode: preview_access_mode
        url: url
        status: status
      properties:
        avatar_url:
          type: string
        created_at:
          type: string
        display_name:
          type: string
        email:
          type: string
        handle:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        preview_access_mode:
          type: string
        status:
          type: string
        updated_at:
          type: string
        url:
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - email
      - handle
      - id
      - status
      - version_id
      type: object
    types.UserDatabasePassword:
      example:
        expires_at: expires_at
        user_id: user_id
        $password: $password
        created_at: created_at
        id: id
      properties:
        $password:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        user_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - $password
      - created_at
      - id
      type: object
    types.UserLoginRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    types.UserOrg:
      example:
        role: role
        updated_at: updated_at
        org:
          avatar_url: avatar_url
          updated_at: updated_at
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          display_name: display_name
          url: url
        user_id: user_id
        org_id: org_id
        created_at: created_at
        id: id
        version_id: 0
        status: status
      properties:
        created_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        org:
          $ref: '#/components/schemas/types.Org'
        org_id:
          type: string
        role:
          type: string
        status:
          format: pending|accepted
          type: string
        updated_at:
          type: string
        user_id:
          type: string
        version_id:
          type: integer
      required:
      - created_at
      - id
      - org_id
      - role
      - status
      - user_id
      type: object
    types.UserQuota:
      example:
        conn:
          available: 0
          limit: 6
          used: 1
        workspace:
          available: 0
          limit: 6
          used: 1
        organization:
          available: 0
          limit: 6
          used: 1
        association:
          key:
            available: 0
            limit: 6
            used: 1
        token:
          available: 0
          limit: 6
          used: 1
      properties:
        association:
          additionalProperties:
            $ref: '#/components/schemas/types.Quota'
          type: object
        conn:
          $ref: '#/components/schemas/types.Quota'
        organization:
          $ref: '#/components/schemas/types.Quota'
        token:
          $ref: '#/components/schemas/types.Quota'
        workspace:
          $ref: '#/components/schemas/types.Quota'
      required:
      - association
      - conn
      - organization
      - token
      - workspace
      type: object
    types.UserSearch:
      example:
        avatar_url: avatar_url
        handle: handle
        id: id
        display_name: display_name
      properties:
        avatar_url:
          type: string
        display_name:
          type: string
        handle:
          format: ^[a-z](?:[a-z0-9]|_(?=[a-z0-9])){0,38}$
          type: string
        id:
          type: string
      required:
      - id
      type: object
    types.UserSignupRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    types.Workspace:
      example:
        hive: hive
        public_key: public_key
        database_name: database_name
        updated_at: updated_at
        identity_id: identity_id
        identity:
          handle: handle
          id: id
          display_name: display_name
          type: type
        host: host
        created_at: created_at
        workspace_state: workspace_state
        handle: aaa
        id: id
        version_id: 0
      properties:
        created_at:
          type: string
        database_name:
          type: string
        handle:
          example: aaa
          format: ^[a-z0-9]{1,23}$
          type: string
        hive:
          type: string
        host:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity:
          $ref: '#/components/schemas/types.Identity'
        identity_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        public_key:
          type: string
        updated_at:
          type: string
        version_id:
          type: integer
        workspace_state:
          type: string
      required:
      - created_at
      - handle
      - id
      - identity_id
      - version_id
      type: object
    types.WorkspaceConn:
      example:
        workspace_id: workspace_id
        workspace:
          hive: hive
          public_key: public_key
          database_name: database_name
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          host: host
          created_at: created_at
          workspace_state: workspace_state
          handle: aaa
          id: id
          version_id: 0
        updated_at: updated_at
        connection_id: connection_id
        identity_id: identity_id
        created_at: created_at
        connection:
          plugin: plugin
          updated_at: updated_at
          identity_id: identity_id
          identity:
            handle: handle
            id: id
            display_name: display_name
            type: type
          created_at: created_at
          handle: handle
          id: id
          version_id: 0
          type: type
          config: '{}'
        id: id
        version_id: 0
      properties:
        connection:
          $ref: '#/components/schemas/types.Connection'
        connection_id:
          type: string
        created_at:
          type: string
        id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        identity_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
        updated_at:
          type: string
        version_id:
          type: integer
        workspace:
          $ref: '#/components/schemas/types.Workspace'
        workspace_id:
          format: ^[a-z]_[0-9a-v]{20}$
          type: string
      required:
      - connection_id
      - created_at
      - id
      - identity_id
      - version_id
      - workspace_id
      type: object
    types.WorkspaceQueryResult:
      example:
        columns:
        - name: name
          max_data_length: 0
          data_type_name: data_type_name
        - name: name
          max_data_length: 0
          data_type_name: data_type_name
        rows:
        - - '{}'
          - '{}'
        - - '{}'
          - '{}'
      properties:
        columns:
          items:
            $ref: '#/components/schemas/types.WorkspaceQueryResultColumn'
          type: array
        rows:
          items:
            items:
              type: object
            type: array
          type: array
      required:
      - columns
      - rows
      type: object
    types.WorkspaceQueryResultColumn:
      example:
        name: name
        max_data_length: 0
        data_type_name: data_type_name
      properties:
        data_type_name:
          type: string
        max_data_length:
          type: integer
        name:
          type: string
      required:
      - data_type_name
      - name
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
