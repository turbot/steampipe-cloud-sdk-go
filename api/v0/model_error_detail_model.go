/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// ErrorDetailModel struct for ErrorDetailModel
type ErrorDetailModel struct {
	Location *string `json:"location,omitempty"`
	Message *string `json:"message,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewErrorDetailModel instantiates a new ErrorDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorDetailModel() *ErrorDetailModel {
	this := ErrorDetailModel{}
	return &this
}

// NewErrorDetailModelWithDefaults instantiates a new ErrorDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorDetailModelWithDefaults() *ErrorDetailModel {
	this := ErrorDetailModel{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ErrorDetailModel) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailModel) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ErrorDetailModel) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ErrorDetailModel) SetLocation(v string) {
	o.Location = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorDetailModel) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailModel) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorDetailModel) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorDetailModel) SetMessage(v string) {
	o.Message = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ErrorDetailModel) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetailModel) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ErrorDetailModel) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ErrorDetailModel) SetValue(v string) {
	o.Value = &v
}

func (o ErrorDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableErrorDetailModel struct {
	value *ErrorDetailModel
	isSet bool
}

func (v NullableErrorDetailModel) Get() *ErrorDetailModel {
	return v.value
}

func (v *NullableErrorDetailModel) Set(val *ErrorDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorDetailModel(val *ErrorDetailModel) *NullableErrorDetailModel {
	return &NullableErrorDetailModel{value: val, isSet: true}
}

func (v NullableErrorDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


