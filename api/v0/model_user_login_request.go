/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// UserLoginRequest struct for UserLoginRequest
type UserLoginRequest struct {
	Email string `json:"email"`
}

// NewUserLoginRequest instantiates a new UserLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLoginRequest(email string) *UserLoginRequest {
	this := UserLoginRequest{}
	this.Email = email
	return &this
}

// NewUserLoginRequestWithDefaults instantiates a new UserLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLoginRequestWithDefaults() *UserLoginRequest {
	this := UserLoginRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *UserLoginRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserLoginRequest) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserLoginRequest) SetEmail(v string) {
	o.Email = v
}

func (o UserLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableUserLoginRequest struct {
	value *UserLoginRequest
	isSet bool
}

func (v NullableUserLoginRequest) Get() *UserLoginRequest {
	return v.value
}

func (v *NullableUserLoginRequest) Set(val *UserLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLoginRequest(val *UserLoginRequest) *NullableUserLoginRequest {
	return &NullableUserLoginRequest{value: val, isSet: true}
}

func (v NullableUserLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


