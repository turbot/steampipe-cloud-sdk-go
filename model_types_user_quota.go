/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesUserQuota struct for TypesUserQuota
type TypesUserQuota struct {
	Association  map[string]TypesQuota `json:"association"`
	Conn         TypesQuota            `json:"conn"`
	Organization TypesQuota            `json:"organization"`
	Token        TypesQuota            `json:"token"`
	Workspace    TypesQuota            `json:"workspace"`
}

// NewTypesUserQuota instantiates a new TypesUserQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesUserQuota(association map[string]TypesQuota, conn TypesQuota, organization TypesQuota, token TypesQuota, workspace TypesQuota) *TypesUserQuota {
	this := TypesUserQuota{}
	this.Association = association
	this.Conn = conn
	this.Organization = organization
	this.Token = token
	this.Workspace = workspace
	return &this
}

// NewTypesUserQuotaWithDefaults instantiates a new TypesUserQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesUserQuotaWithDefaults() *TypesUserQuota {
	this := TypesUserQuota{}
	return &this
}

// GetAssociation returns the Association field value
func (o *TypesUserQuota) GetAssociation() map[string]TypesQuota {
	if o == nil {
		var ret map[string]TypesQuota
		return ret
	}

	return o.Association
}

// GetAssociationOk returns a tuple with the Association field value
// and a boolean to check if the value has been set.
func (o *TypesUserQuota) GetAssociationOk() (*map[string]TypesQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Association, true
}

// SetAssociation sets field value
func (o *TypesUserQuota) SetAssociation(v map[string]TypesQuota) {
	o.Association = v
}

// GetConn returns the Conn field value
func (o *TypesUserQuota) GetConn() TypesQuota {
	if o == nil {
		var ret TypesQuota
		return ret
	}

	return o.Conn
}

// GetConnOk returns a tuple with the Conn field value
// and a boolean to check if the value has been set.
func (o *TypesUserQuota) GetConnOk() (*TypesQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conn, true
}

// SetConn sets field value
func (o *TypesUserQuota) SetConn(v TypesQuota) {
	o.Conn = v
}

// GetOrganization returns the Organization field value
func (o *TypesUserQuota) GetOrganization() TypesQuota {
	if o == nil {
		var ret TypesQuota
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *TypesUserQuota) GetOrganizationOk() (*TypesQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *TypesUserQuota) SetOrganization(v TypesQuota) {
	o.Organization = v
}

// GetToken returns the Token field value
func (o *TypesUserQuota) GetToken() TypesQuota {
	if o == nil {
		var ret TypesQuota
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TypesUserQuota) GetTokenOk() (*TypesQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TypesUserQuota) SetToken(v TypesQuota) {
	o.Token = v
}

// GetWorkspace returns the Workspace field value
func (o *TypesUserQuota) GetWorkspace() TypesQuota {
	if o == nil {
		var ret TypesQuota
		return ret
	}

	return o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value
// and a boolean to check if the value has been set.
func (o *TypesUserQuota) GetWorkspaceOk() (*TypesQuota, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workspace, true
}

// SetWorkspace sets field value
func (o *TypesUserQuota) SetWorkspace(v TypesQuota) {
	o.Workspace = v
}

func (o TypesUserQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["association"] = o.Association
	}
	if true {
		toSerialize["conn"] = o.Conn
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["workspace"] = o.Workspace
	}
	return json.Marshal(toSerialize)
}

type NullableTypesUserQuota struct {
	value *TypesUserQuota
	isSet bool
}

func (v NullableTypesUserQuota) Get() *TypesUserQuota {
	return v.value
}

func (v *NullableTypesUserQuota) Set(val *TypesUserQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesUserQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesUserQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesUserQuota(val *TypesUserQuota) *NullableTypesUserQuota {
	return &NullableTypesUserQuota{value: val, isSet: true}
}

func (v NullableTypesUserQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesUserQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
