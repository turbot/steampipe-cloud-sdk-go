/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesUpdateWorkspaceRequest struct for TypesUpdateWorkspaceRequest
type TypesUpdateWorkspaceRequest struct {
	Handle *string `json:"handle,omitempty"`
}

// NewTypesUpdateWorkspaceRequest instantiates a new TypesUpdateWorkspaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesUpdateWorkspaceRequest() *TypesUpdateWorkspaceRequest {
	this := TypesUpdateWorkspaceRequest{}
	return &this
}

// NewTypesUpdateWorkspaceRequestWithDefaults instantiates a new TypesUpdateWorkspaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesUpdateWorkspaceRequestWithDefaults() *TypesUpdateWorkspaceRequest {
	this := TypesUpdateWorkspaceRequest{}
	return &this
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *TypesUpdateWorkspaceRequest) GetHandle() string {
	if o == nil || o.Handle == nil {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesUpdateWorkspaceRequest) GetHandleOk() (*string, bool) {
	if o == nil || o.Handle == nil {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *TypesUpdateWorkspaceRequest) HasHandle() bool {
	if o != nil && o.Handle != nil {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *TypesUpdateWorkspaceRequest) SetHandle(v string) {
	o.Handle = &v
}

func (o TypesUpdateWorkspaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Handle != nil {
		toSerialize["handle"] = o.Handle
	}
	return json.Marshal(toSerialize)
}

type NullableTypesUpdateWorkspaceRequest struct {
	value *TypesUpdateWorkspaceRequest
	isSet bool
}

func (v NullableTypesUpdateWorkspaceRequest) Get() *TypesUpdateWorkspaceRequest {
	return v.value
}

func (v *NullableTypesUpdateWorkspaceRequest) Set(val *TypesUpdateWorkspaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesUpdateWorkspaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesUpdateWorkspaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesUpdateWorkspaceRequest(val *TypesUpdateWorkspaceRequest) *NullableTypesUpdateWorkspaceRequest {
	return &NullableTypesUpdateWorkspaceRequest{value: val, isSet: true}
}

func (v NullableTypesUpdateWorkspaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesUpdateWorkspaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
