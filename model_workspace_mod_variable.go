/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// WorkspaceModVariable struct for WorkspaceModVariable
type WorkspaceModVariable struct {
	CreatedAt    string      `json:"created_at"`
	CreatedBy    *User       `json:"created_by,omitempty"`
	CreatedById  string      `json:"created_by_id"`
	Description  *string     `json:"description,omitempty"`
	Id           string      `json:"id"`
	ModAlias     *string     `json:"mod_alias,omitempty"`
	Name         *string     `json:"name,omitempty"`
	Type         *string     `json:"type,omitempty"`
	UpdatedAt    *string     `json:"updated_at,omitempty"`
	UpdatedBy    *User       `json:"updated_by,omitempty"`
	UpdatedById  string      `json:"updated_by_id"`
	Value        interface{} `json:"value,omitempty"`
	ValueDefault interface{} `json:"value_default,omitempty"`
	ValueSetting interface{} `json:"value_setting,omitempty"`
	VersionId    int32       `json:"version_id"`
}

// NewWorkspaceModVariable instantiates a new WorkspaceModVariable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceModVariable(createdAt string, createdById string, id string, updatedById string, versionId int32) *WorkspaceModVariable {
	this := WorkspaceModVariable{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.Id = id
	this.UpdatedById = updatedById
	this.VersionId = versionId
	return &this
}

// NewWorkspaceModVariableWithDefaults instantiates a new WorkspaceModVariable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceModVariableWithDefaults() *WorkspaceModVariable {
	this := WorkspaceModVariable{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkspaceModVariable) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkspaceModVariable) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *WorkspaceModVariable) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *WorkspaceModVariable) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *WorkspaceModVariable) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkspaceModVariable) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value
func (o *WorkspaceModVariable) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceModVariable) SetId(v string) {
	o.Id = v
}

// GetModAlias returns the ModAlias field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetModAlias() string {
	if o == nil || o.ModAlias == nil {
		var ret string
		return ret
	}
	return *o.ModAlias
}

// GetModAliasOk returns a tuple with the ModAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetModAliasOk() (*string, bool) {
	if o == nil || o.ModAlias == nil {
		return nil, false
	}
	return o.ModAlias, true
}

// HasModAlias returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasModAlias() bool {
	if o != nil && o.ModAlias != nil {
		return true
	}

	return false
}

// SetModAlias gets a reference to the given string and assigns it to the ModAlias field.
func (o *WorkspaceModVariable) SetModAlias(v string) {
	o.ModAlias = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkspaceModVariable) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkspaceModVariable) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WorkspaceModVariable) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *WorkspaceModVariable) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *WorkspaceModVariable) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *WorkspaceModVariable) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetValue() interface{} {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetValueOk() (*interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *WorkspaceModVariable) SetValue(v string) {
	o.Value = &v
}

// GetValueDefault returns the ValueDefault field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetValueDefault() interface{} {
	if o == nil || o.ValueDefault == nil {
		var ret string
		return ret
	}
	return o.ValueDefault
}

// GetValueDefaultOk returns a tuple with the ValueDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetValueDefaultOk() (*interface{}, bool) {
	if o == nil || o.ValueDefault == nil {
		return nil, false
	}
	return &o.ValueDefault, true
}

// HasValueDefault returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasValueDefault() bool {
	if o != nil && o.ValueDefault != nil {
		return true
	}

	return false
}

// SetValueDefault gets a reference to the given string and assigns it to the ValueDefault field.
func (o *WorkspaceModVariable) SetValueDefault(v string) {
	o.ValueDefault = &v
}

// GetValueSetting returns the ValueSetting field value if set, zero value otherwise.
func (o *WorkspaceModVariable) GetValueSetting() interface{} {
	if o == nil || o.ValueSetting == nil {
		var ret string
		return ret
	}
	return o.ValueSetting
}

// GetValueSettingOk returns a tuple with the ValueSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetValueSettingOk() (*interface{}, bool) {
	if o == nil || o.ValueSetting == nil {
		return nil, false
	}
	return &o.ValueSetting, true
}

// HasValueSetting returns a boolean if a field has been set.
func (o *WorkspaceModVariable) HasValueSetting() bool {
	if o != nil && o.ValueSetting != nil {
		return true
	}

	return false
}

// SetValueSetting gets a reference to the given string and assigns it to the ValueSetting field.
func (o *WorkspaceModVariable) SetValueSetting(v string) {
	o.ValueSetting = &v
}

// GetVersionId returns the VersionId field value
func (o *WorkspaceModVariable) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModVariable) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *WorkspaceModVariable) SetVersionId(v int32) {
	o.VersionId = v
}

func (o WorkspaceModVariable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.ModAlias != nil {
		toSerialize["mod_alias"] = o.ModAlias
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ValueDefault != nil {
		toSerialize["value_default"] = o.ValueDefault
	}
	if o.ValueSetting != nil {
		toSerialize["value_setting"] = o.ValueSetting
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceModVariable struct {
	value *WorkspaceModVariable
	isSet bool
}

func (v NullableWorkspaceModVariable) Get() *WorkspaceModVariable {
	return v.value
}

func (v *NullableWorkspaceModVariable) Set(val *WorkspaceModVariable) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceModVariable) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceModVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceModVariable(val *WorkspaceModVariable) *NullableWorkspaceModVariable {
	return &NullableWorkspaceModVariable{value: val, isSet: true}
}

func (v NullableWorkspaceModVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceModVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
