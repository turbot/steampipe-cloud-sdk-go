/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// CreateWorkspaceAggregatorRequest struct for CreateWorkspaceAggregatorRequest
type CreateWorkspaceAggregatorRequest struct {
	// The connections that are a part of the aggregator.
	Connections []string `json:"connections"`
	// The handle of the aggregator.
	Handle string `json:"handle"`
	// The plugin which this aggregator belongs to.
	Plugin string `json:"plugin"`
}

// NewCreateWorkspaceAggregatorRequest instantiates a new CreateWorkspaceAggregatorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkspaceAggregatorRequest(connections []string, handle string, plugin string) *CreateWorkspaceAggregatorRequest {
	this := CreateWorkspaceAggregatorRequest{}
	this.Connections = connections
	this.Handle = handle
	this.Plugin = plugin
	return &this
}

// NewCreateWorkspaceAggregatorRequestWithDefaults instantiates a new CreateWorkspaceAggregatorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkspaceAggregatorRequestWithDefaults() *CreateWorkspaceAggregatorRequest {
	this := CreateWorkspaceAggregatorRequest{}
	return &this
}

// GetConnections returns the Connections field value
func (o *CreateWorkspaceAggregatorRequest) GetConnections() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceAggregatorRequest) GetConnectionsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connections, true
}

// SetConnections sets field value
func (o *CreateWorkspaceAggregatorRequest) SetConnections(v []string) {
	o.Connections = v
}

// GetHandle returns the Handle field value
func (o *CreateWorkspaceAggregatorRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceAggregatorRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateWorkspaceAggregatorRequest) SetHandle(v string) {
	o.Handle = v
}

// GetPlugin returns the Plugin field value
func (o *CreateWorkspaceAggregatorRequest) GetPlugin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceAggregatorRequest) GetPluginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plugin, true
}

// SetPlugin sets field value
func (o *CreateWorkspaceAggregatorRequest) SetPlugin(v string) {
	o.Plugin = v
}

func (o CreateWorkspaceAggregatorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connections"] = o.Connections
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["plugin"] = o.Plugin
	}
	return json.Marshal(toSerialize)
}

type NullableCreateWorkspaceAggregatorRequest struct {
	value *CreateWorkspaceAggregatorRequest
	isSet bool
}

func (v NullableCreateWorkspaceAggregatorRequest) Get() *CreateWorkspaceAggregatorRequest {
	return v.value
}

func (v *NullableCreateWorkspaceAggregatorRequest) Set(val *CreateWorkspaceAggregatorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkspaceAggregatorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkspaceAggregatorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkspaceAggregatorRequest(val *CreateWorkspaceAggregatorRequest) *NullableCreateWorkspaceAggregatorRequest {
	return &NullableCreateWorkspaceAggregatorRequest{value: val, isSet: true}
}

func (v NullableCreateWorkspaceAggregatorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkspaceAggregatorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
