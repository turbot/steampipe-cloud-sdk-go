/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesAuditRecord struct for TypesAuditRecord
type TypesAuditRecord struct {
	ActionType       string                 `json:"action_type"`
	ActorAvatarUrl   string                 `json:"actor_avatar_url"`
	ActorDisplayName string                 `json:"actor_display_name"`
	ActorHandle      string                 `json:"actor_handle"`
	ActorId          string                 `json:"actor_id"`
	ActorIp          string                 `json:"actor_ip"`
	CreatedAt        string                 `json:"created_at"`
	Data             map[string]interface{} `json:"data"`
	Id               string                 `json:"id"`
	IdentityHandle   string                 `json:"identity_handle"`
	IdentityId       string                 `json:"identity_id"`
	TargetHandle     *string                `json:"target_handle,omitempty"`
	TargetId         *string                `json:"target_id,omitempty"`
}

// NewTypesAuditRecord instantiates a new TypesAuditRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesAuditRecord(actionType string, actorAvatarUrl string, actorDisplayName string, actorHandle string, actorId string, actorIp string, createdAt string, data map[string]interface{}, id string, identityHandle string, identityId string) *TypesAuditRecord {
	this := TypesAuditRecord{}
	this.ActionType = actionType
	this.ActorAvatarUrl = actorAvatarUrl
	this.ActorDisplayName = actorDisplayName
	this.ActorHandle = actorHandle
	this.ActorId = actorId
	this.ActorIp = actorIp
	this.CreatedAt = createdAt
	this.Data = data
	this.Id = id
	this.IdentityHandle = identityHandle
	this.IdentityId = identityId
	return &this
}

// NewTypesAuditRecordWithDefaults instantiates a new TypesAuditRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesAuditRecordWithDefaults() *TypesAuditRecord {
	this := TypesAuditRecord{}
	return &this
}

// GetActionType returns the ActionType field value
func (o *TypesAuditRecord) GetActionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *TypesAuditRecord) SetActionType(v string) {
	o.ActionType = v
}

// GetActorAvatarUrl returns the ActorAvatarUrl field value
func (o *TypesAuditRecord) GetActorAvatarUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorAvatarUrl
}

// GetActorAvatarUrlOk returns a tuple with the ActorAvatarUrl field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActorAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorAvatarUrl, true
}

// SetActorAvatarUrl sets field value
func (o *TypesAuditRecord) SetActorAvatarUrl(v string) {
	o.ActorAvatarUrl = v
}

// GetActorDisplayName returns the ActorDisplayName field value
func (o *TypesAuditRecord) GetActorDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorDisplayName
}

// GetActorDisplayNameOk returns a tuple with the ActorDisplayName field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActorDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorDisplayName, true
}

// SetActorDisplayName sets field value
func (o *TypesAuditRecord) SetActorDisplayName(v string) {
	o.ActorDisplayName = v
}

// GetActorHandle returns the ActorHandle field value
func (o *TypesAuditRecord) GetActorHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorHandle
}

// GetActorHandleOk returns a tuple with the ActorHandle field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActorHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorHandle, true
}

// SetActorHandle sets field value
func (o *TypesAuditRecord) SetActorHandle(v string) {
	o.ActorHandle = v
}

// GetActorId returns the ActorId field value
func (o *TypesAuditRecord) GetActorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorId, true
}

// SetActorId sets field value
func (o *TypesAuditRecord) SetActorId(v string) {
	o.ActorId = v
}

// GetActorIp returns the ActorIp field value
func (o *TypesAuditRecord) GetActorIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorIp
}

// GetActorIpOk returns a tuple with the ActorIp field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetActorIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorIp, true
}

// SetActorIp sets field value
func (o *TypesAuditRecord) SetActorIp(v string) {
	o.ActorIp = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TypesAuditRecord) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TypesAuditRecord) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetData returns the Data field value
func (o *TypesAuditRecord) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetDataOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *TypesAuditRecord) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetId returns the Id field value
func (o *TypesAuditRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TypesAuditRecord) SetId(v string) {
	o.Id = v
}

// GetIdentityHandle returns the IdentityHandle field value
func (o *TypesAuditRecord) GetIdentityHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityHandle
}

// GetIdentityHandleOk returns a tuple with the IdentityHandle field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetIdentityHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityHandle, true
}

// SetIdentityHandle sets field value
func (o *TypesAuditRecord) SetIdentityHandle(v string) {
	o.IdentityHandle = v
}

// GetIdentityId returns the IdentityId field value
func (o *TypesAuditRecord) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *TypesAuditRecord) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetTargetHandle returns the TargetHandle field value if set, zero value otherwise.
func (o *TypesAuditRecord) GetTargetHandle() string {
	if o == nil || o.TargetHandle == nil {
		var ret string
		return ret
	}
	return *o.TargetHandle
}

// GetTargetHandleOk returns a tuple with the TargetHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetTargetHandleOk() (*string, bool) {
	if o == nil || o.TargetHandle == nil {
		return nil, false
	}
	return o.TargetHandle, true
}

// HasTargetHandle returns a boolean if a field has been set.
func (o *TypesAuditRecord) HasTargetHandle() bool {
	if o != nil && o.TargetHandle != nil {
		return true
	}

	return false
}

// SetTargetHandle gets a reference to the given string and assigns it to the TargetHandle field.
func (o *TypesAuditRecord) SetTargetHandle(v string) {
	o.TargetHandle = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *TypesAuditRecord) GetTargetId() string {
	if o == nil || o.TargetId == nil {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesAuditRecord) GetTargetIdOk() (*string, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *TypesAuditRecord) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *TypesAuditRecord) SetTargetId(v string) {
	o.TargetId = &v
}

func (o TypesAuditRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action_type"] = o.ActionType
	}
	if true {
		toSerialize["actor_avatar_url"] = o.ActorAvatarUrl
	}
	if true {
		toSerialize["actor_display_name"] = o.ActorDisplayName
	}
	if true {
		toSerialize["actor_handle"] = o.ActorHandle
	}
	if true {
		toSerialize["actor_id"] = o.ActorId
	}
	if true {
		toSerialize["actor_ip"] = o.ActorIp
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["identity_handle"] = o.IdentityHandle
	}
	if true {
		toSerialize["identity_id"] = o.IdentityId
	}
	if o.TargetHandle != nil {
		toSerialize["target_handle"] = o.TargetHandle
	}
	if o.TargetId != nil {
		toSerialize["target_id"] = o.TargetId
	}
	return json.Marshal(toSerialize)
}

type NullableTypesAuditRecord struct {
	value *TypesAuditRecord
	isSet bool
}

func (v NullableTypesAuditRecord) Get() *TypesAuditRecord {
	return v.value
}

func (v *NullableTypesAuditRecord) Set(val *TypesAuditRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesAuditRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesAuditRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesAuditRecord(val *TypesAuditRecord) *NullableTypesAuditRecord {
	return &NullableTypesAuditRecord{value: val, isSet: true}
}

func (v NullableTypesAuditRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesAuditRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
