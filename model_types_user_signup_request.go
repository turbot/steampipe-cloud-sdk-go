/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesUserSignupRequest struct for TypesUserSignupRequest
type TypesUserSignupRequest struct {
	Email string `json:"email"`
}

// NewTypesUserSignupRequest instantiates a new TypesUserSignupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesUserSignupRequest(email string) *TypesUserSignupRequest {
	this := TypesUserSignupRequest{}
	this.Email = email
	return &this
}

// NewTypesUserSignupRequestWithDefaults instantiates a new TypesUserSignupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesUserSignupRequestWithDefaults() *TypesUserSignupRequest {
	this := TypesUserSignupRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *TypesUserSignupRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *TypesUserSignupRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *TypesUserSignupRequest) SetEmail(v string) {
	o.Email = v
}

func (o TypesUserSignupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableTypesUserSignupRequest struct {
	value *TypesUserSignupRequest
	isSet bool
}

func (v NullableTypesUserSignupRequest) Get() *TypesUserSignupRequest {
	return v.value
}

func (v *NullableTypesUserSignupRequest) Set(val *TypesUserSignupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesUserSignupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesUserSignupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesUserSignupRequest(val *TypesUserSignupRequest) *NullableTypesUserSignupRequest {
	return &NullableTypesUserSignupRequest{value: val, isSet: true}
}

func (v NullableTypesUserSignupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesUserSignupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
