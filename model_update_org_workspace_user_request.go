/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// UpdateOrgWorkspaceUserRequest struct for UpdateOrgWorkspaceUserRequest
type UpdateOrgWorkspaceUserRequest struct {
	Role string `json:"role"`
}

// NewUpdateOrgWorkspaceUserRequest instantiates a new UpdateOrgWorkspaceUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrgWorkspaceUserRequest(role string) *UpdateOrgWorkspaceUserRequest {
	this := UpdateOrgWorkspaceUserRequest{}
	this.Role = role
	return &this
}

// NewUpdateOrgWorkspaceUserRequestWithDefaults instantiates a new UpdateOrgWorkspaceUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrgWorkspaceUserRequestWithDefaults() *UpdateOrgWorkspaceUserRequest {
	this := UpdateOrgWorkspaceUserRequest{}
	return &this
}

// GetRole returns the Role field value
func (o *UpdateOrgWorkspaceUserRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *UpdateOrgWorkspaceUserRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *UpdateOrgWorkspaceUserRequest) SetRole(v string) {
	o.Role = v
}

func (o UpdateOrgWorkspaceUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateOrgWorkspaceUserRequest struct {
	value *UpdateOrgWorkspaceUserRequest
	isSet bool
}

func (v NullableUpdateOrgWorkspaceUserRequest) Get() *UpdateOrgWorkspaceUserRequest {
	return v.value
}

func (v *NullableUpdateOrgWorkspaceUserRequest) Set(val *UpdateOrgWorkspaceUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrgWorkspaceUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrgWorkspaceUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrgWorkspaceUserRequest(val *UpdateOrgWorkspaceUserRequest) *NullableUpdateOrgWorkspaceUserRequest {
	return &NullableUpdateOrgWorkspaceUserRequest{value: val, isSet: true}
}

func (v NullableUpdateOrgWorkspaceUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrgWorkspaceUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
