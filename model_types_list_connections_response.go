/*
Steampipe Cloud

Interrogate your CloudOps data with the simplicity and power of SQL, then share your discoveries using Steampipe Cloud.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// TypesListConnectionsResponse struct for TypesListConnectionsResponse
type TypesListConnectionsResponse struct {
	Items     *[]TypesConnection `json:"items,omitempty"`
	NextToken *string            `json:"next_token,omitempty"`
}

// NewTypesListConnectionsResponse instantiates a new TypesListConnectionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesListConnectionsResponse() *TypesListConnectionsResponse {
	this := TypesListConnectionsResponse{}
	return &this
}

// NewTypesListConnectionsResponseWithDefaults instantiates a new TypesListConnectionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesListConnectionsResponseWithDefaults() *TypesListConnectionsResponse {
	this := TypesListConnectionsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *TypesListConnectionsResponse) GetItems() []TypesConnection {
	if o == nil || o.Items == nil {
		var ret []TypesConnection
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesListConnectionsResponse) GetItemsOk() (*[]TypesConnection, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *TypesListConnectionsResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []TypesConnection and assigns it to the Items field.
func (o *TypesListConnectionsResponse) SetItems(v []TypesConnection) {
	o.Items = &v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *TypesListConnectionsResponse) GetNextToken() string {
	if o == nil || o.NextToken == nil {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesListConnectionsResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || o.NextToken == nil {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *TypesListConnectionsResponse) HasNextToken() bool {
	if o != nil && o.NextToken != nil {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *TypesListConnectionsResponse) SetNextToken(v string) {
	o.NextToken = &v
}

func (o TypesListConnectionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.NextToken != nil {
		toSerialize["next_token"] = o.NextToken
	}
	return json.Marshal(toSerialize)
}

type NullableTypesListConnectionsResponse struct {
	value *TypesListConnectionsResponse
	isSet bool
}

func (v NullableTypesListConnectionsResponse) Get() *TypesListConnectionsResponse {
	return v.value
}

func (v *NullableTypesListConnectionsResponse) Set(val *TypesListConnectionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesListConnectionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesListConnectionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesListConnectionsResponse(val *TypesListConnectionsResponse) *NullableTypesListConnectionsResponse {
	return &NullableTypesListConnectionsResponse{value: val, isSet: true}
}

func (v NullableTypesListConnectionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesListConnectionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
