/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// DeleteOrgAvatarResponse struct for DeleteOrgAvatarResponse
type DeleteOrgAvatarResponse struct {
	// The URL of the deleted avatar.
	AvatarUrl *string `json:"avatar_url,omitempty"`
}

// NewDeleteOrgAvatarResponse instantiates a new DeleteOrgAvatarResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteOrgAvatarResponse() *DeleteOrgAvatarResponse {
	this := DeleteOrgAvatarResponse{}
	return &this
}

// NewDeleteOrgAvatarResponseWithDefaults instantiates a new DeleteOrgAvatarResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteOrgAvatarResponseWithDefaults() *DeleteOrgAvatarResponse {
	this := DeleteOrgAvatarResponse{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *DeleteOrgAvatarResponse) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteOrgAvatarResponse) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *DeleteOrgAvatarResponse) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *DeleteOrgAvatarResponse) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

func (o DeleteOrgAvatarResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvatarUrl != nil {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteOrgAvatarResponse struct {
	value *DeleteOrgAvatarResponse
	isSet bool
}

func (v NullableDeleteOrgAvatarResponse) Get() *DeleteOrgAvatarResponse {
	return v.value
}

func (v *NullableDeleteOrgAvatarResponse) Set(val *DeleteOrgAvatarResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteOrgAvatarResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteOrgAvatarResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteOrgAvatarResponse(val *DeleteOrgAvatarResponse) *NullableDeleteOrgAvatarResponse {
	return &NullableDeleteOrgAvatarResponse{value: val, isSet: true}
}

func (v NullableDeleteOrgAvatarResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteOrgAvatarResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
