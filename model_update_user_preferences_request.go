/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: {{OPEN_API_VERSION}}
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// UpdateUserPreferencesRequest struct for UpdateUserPreferencesRequest
type UpdateUserPreferencesRequest struct {
	CommunicationCommunityUpdates *string `json:"communication_community_updates,omitempty"`
	CommunicationProductUpdates   *string `json:"communication_product_updates,omitempty"`
	CommunicationTipsAndTricks    *string `json:"communication_tips_and_tricks,omitempty"`
}

// NewUpdateUserPreferencesRequest instantiates a new UpdateUserPreferencesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserPreferencesRequest() *UpdateUserPreferencesRequest {
	this := UpdateUserPreferencesRequest{}
	return &this
}

// NewUpdateUserPreferencesRequestWithDefaults instantiates a new UpdateUserPreferencesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserPreferencesRequestWithDefaults() *UpdateUserPreferencesRequest {
	this := UpdateUserPreferencesRequest{}
	return &this
}

// GetCommunicationCommunityUpdates returns the CommunicationCommunityUpdates field value if set, zero value otherwise.
func (o *UpdateUserPreferencesRequest) GetCommunicationCommunityUpdates() string {
	if o == nil || o.CommunicationCommunityUpdates == nil {
		var ret string
		return ret
	}
	return *o.CommunicationCommunityUpdates
}

// GetCommunicationCommunityUpdatesOk returns a tuple with the CommunicationCommunityUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPreferencesRequest) GetCommunicationCommunityUpdatesOk() (*string, bool) {
	if o == nil || o.CommunicationCommunityUpdates == nil {
		return nil, false
	}
	return o.CommunicationCommunityUpdates, true
}

// HasCommunicationCommunityUpdates returns a boolean if a field has been set.
func (o *UpdateUserPreferencesRequest) HasCommunicationCommunityUpdates() bool {
	if o != nil && o.CommunicationCommunityUpdates != nil {
		return true
	}

	return false
}

// SetCommunicationCommunityUpdates gets a reference to the given string and assigns it to the CommunicationCommunityUpdates field.
func (o *UpdateUserPreferencesRequest) SetCommunicationCommunityUpdates(v string) {
	o.CommunicationCommunityUpdates = &v
}

// GetCommunicationProductUpdates returns the CommunicationProductUpdates field value if set, zero value otherwise.
func (o *UpdateUserPreferencesRequest) GetCommunicationProductUpdates() string {
	if o == nil || o.CommunicationProductUpdates == nil {
		var ret string
		return ret
	}
	return *o.CommunicationProductUpdates
}

// GetCommunicationProductUpdatesOk returns a tuple with the CommunicationProductUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPreferencesRequest) GetCommunicationProductUpdatesOk() (*string, bool) {
	if o == nil || o.CommunicationProductUpdates == nil {
		return nil, false
	}
	return o.CommunicationProductUpdates, true
}

// HasCommunicationProductUpdates returns a boolean if a field has been set.
func (o *UpdateUserPreferencesRequest) HasCommunicationProductUpdates() bool {
	if o != nil && o.CommunicationProductUpdates != nil {
		return true
	}

	return false
}

// SetCommunicationProductUpdates gets a reference to the given string and assigns it to the CommunicationProductUpdates field.
func (o *UpdateUserPreferencesRequest) SetCommunicationProductUpdates(v string) {
	o.CommunicationProductUpdates = &v
}

// GetCommunicationTipsAndTricks returns the CommunicationTipsAndTricks field value if set, zero value otherwise.
func (o *UpdateUserPreferencesRequest) GetCommunicationTipsAndTricks() string {
	if o == nil || o.CommunicationTipsAndTricks == nil {
		var ret string
		return ret
	}
	return *o.CommunicationTipsAndTricks
}

// GetCommunicationTipsAndTricksOk returns a tuple with the CommunicationTipsAndTricks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPreferencesRequest) GetCommunicationTipsAndTricksOk() (*string, bool) {
	if o == nil || o.CommunicationTipsAndTricks == nil {
		return nil, false
	}
	return o.CommunicationTipsAndTricks, true
}

// HasCommunicationTipsAndTricks returns a boolean if a field has been set.
func (o *UpdateUserPreferencesRequest) HasCommunicationTipsAndTricks() bool {
	if o != nil && o.CommunicationTipsAndTricks != nil {
		return true
	}

	return false
}

// SetCommunicationTipsAndTricks gets a reference to the given string and assigns it to the CommunicationTipsAndTricks field.
func (o *UpdateUserPreferencesRequest) SetCommunicationTipsAndTricks(v string) {
	o.CommunicationTipsAndTricks = &v
}

func (o UpdateUserPreferencesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommunicationCommunityUpdates != nil {
		toSerialize["communication_community_updates"] = o.CommunicationCommunityUpdates
	}
	if o.CommunicationProductUpdates != nil {
		toSerialize["communication_product_updates"] = o.CommunicationProductUpdates
	}
	if o.CommunicationTipsAndTricks != nil {
		toSerialize["communication_tips_and_tricks"] = o.CommunicationTipsAndTricks
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateUserPreferencesRequest struct {
	value *UpdateUserPreferencesRequest
	isSet bool
}

func (v NullableUpdateUserPreferencesRequest) Get() *UpdateUserPreferencesRequest {
	return v.value
}

func (v *NullableUpdateUserPreferencesRequest) Set(val *UpdateUserPreferencesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserPreferencesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserPreferencesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserPreferencesRequest(val *UpdateUserPreferencesRequest) *NullableUpdateUserPreferencesRequest {
	return &NullableUpdateUserPreferencesRequest{value: val, isSet: true}
}

func (v NullableUpdateUserPreferencesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserPreferencesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
