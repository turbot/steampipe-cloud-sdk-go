/*
Steampipe Cloud

Steampipe Cloud is a hosted version of Steampipe (https://steampipe.io), an open source tool to instantly query your cloud services (e.g. AWS, Azure, GCP and more) with SQL. No DB required.

API version: 1.0
Contact: help@steampipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package steampipecloud

import (
	"encoding/json"
)

// WorkspaceMod struct for WorkspaceMod
type WorkspaceMod struct {
	Alias      *string `json:"alias,omitempty"`
	Constraint *string `json:"constraint,omitempty"`
	// The time of creation in ISO 8601 UTC.
	CreatedAt string `json:"created_at"`
	CreatedBy *User  `json:"created_by,omitempty"`
	// The ID of the user that created this.
	CreatedById string  `json:"created_by_id"`
	Details     *string `json:"details,omitempty"`
	Id          string  `json:"id"`
	// The unique identifier for an identity where the workspace mod has been install.
	IdentityId       string  `json:"identity_id"`
	InstalledVersion *string `json:"installed_version,omitempty"`
	Path             *string `json:"path,omitempty"`
	State            *string `json:"state,omitempty"`
	// The time of the last update in ISO 8601 UTC.
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *User   `json:"updated_by,omitempty"`
	// The ID of the user that performed the last update.
	UpdatedById string `json:"updated_by_id"`
	// The version ID of this item. Pass this version ID via an If-Match header when performing mutation operations on the item.
	VersionId   int32  `json:"version_id"`
	WorkspaceId string `json:"workspace_id"`
}

// NewWorkspaceMod instantiates a new WorkspaceMod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceMod(createdAt string, createdById string, id string, identityId string, updatedById string, versionId int32, workspaceId string) *WorkspaceMod {
	this := WorkspaceMod{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.Id = id
	this.IdentityId = identityId
	this.UpdatedById = updatedById
	this.VersionId = versionId
	this.WorkspaceId = workspaceId
	return &this
}

// NewWorkspaceModWithDefaults instantiates a new WorkspaceMod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceModWithDefaults() *WorkspaceMod {
	this := WorkspaceMod{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *WorkspaceMod) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *WorkspaceMod) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *WorkspaceMod) SetAlias(v string) {
	o.Alias = &v
}

// GetConstraint returns the Constraint field value if set, zero value otherwise.
func (o *WorkspaceMod) GetConstraint() string {
	if o == nil || o.Constraint == nil {
		var ret string
		return ret
	}
	return *o.Constraint
}

// GetConstraintOk returns a tuple with the Constraint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetConstraintOk() (*string, bool) {
	if o == nil || o.Constraint == nil {
		return nil, false
	}
	return o.Constraint, true
}

// HasConstraint returns a boolean if a field has been set.
func (o *WorkspaceMod) HasConstraint() bool {
	if o != nil && o.Constraint != nil {
		return true
	}

	return false
}

// SetConstraint gets a reference to the given string and assigns it to the Constraint field.
func (o *WorkspaceMod) SetConstraint(v string) {
	o.Constraint = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkspaceMod) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkspaceMod) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkspaceMod) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkspaceMod) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *WorkspaceMod) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *WorkspaceMod) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *WorkspaceMod) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *WorkspaceMod) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *WorkspaceMod) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *WorkspaceMod) SetDetails(v string) {
	o.Details = &v
}

// GetId returns the Id field value
func (o *WorkspaceMod) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkspaceMod) SetId(v string) {
	o.Id = v
}

// GetIdentityId returns the IdentityId field value
func (o *WorkspaceMod) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *WorkspaceMod) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetInstalledVersion returns the InstalledVersion field value if set, zero value otherwise.
func (o *WorkspaceMod) GetInstalledVersion() string {
	if o == nil || o.InstalledVersion == nil {
		var ret string
		return ret
	}
	return *o.InstalledVersion
}

// GetInstalledVersionOk returns a tuple with the InstalledVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetInstalledVersionOk() (*string, bool) {
	if o == nil || o.InstalledVersion == nil {
		return nil, false
	}
	return o.InstalledVersion, true
}

// HasInstalledVersion returns a boolean if a field has been set.
func (o *WorkspaceMod) HasInstalledVersion() bool {
	if o != nil && o.InstalledVersion != nil {
		return true
	}

	return false
}

// SetInstalledVersion gets a reference to the given string and assigns it to the InstalledVersion field.
func (o *WorkspaceMod) SetInstalledVersion(v string) {
	o.InstalledVersion = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *WorkspaceMod) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *WorkspaceMod) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *WorkspaceMod) SetPath(v string) {
	o.Path = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WorkspaceMod) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WorkspaceMod) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *WorkspaceMod) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkspaceMod) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkspaceMod) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WorkspaceMod) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WorkspaceMod) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *WorkspaceMod) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *WorkspaceMod) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *WorkspaceMod) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *WorkspaceMod) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetVersionId returns the VersionId field value
func (o *WorkspaceMod) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *WorkspaceMod) SetVersionId(v int32) {
	o.VersionId = v
}

// GetWorkspaceId returns the WorkspaceId field value
func (o *WorkspaceMod) GetWorkspaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceMod) GetWorkspaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceId, true
}

// SetWorkspaceId sets field value
func (o *WorkspaceMod) SetWorkspaceId(v string) {
	o.WorkspaceId = v
}

func (o WorkspaceMod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.Constraint != nil {
		toSerialize["constraint"] = o.Constraint
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["identity_id"] = o.IdentityId
	}
	if o.InstalledVersion != nil {
		toSerialize["installed_version"] = o.InstalledVersion
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	if true {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceMod struct {
	value *WorkspaceMod
	isSet bool
}

func (v NullableWorkspaceMod) Get() *WorkspaceMod {
	return v.value
}

func (v *NullableWorkspaceMod) Set(val *WorkspaceMod) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceMod) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceMod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceMod(val *WorkspaceMod) *NullableWorkspaceMod {
	return &NullableWorkspaceMod{value: val, isSet: true}
}

func (v NullableWorkspaceMod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceMod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
